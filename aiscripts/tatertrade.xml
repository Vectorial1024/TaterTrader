<?xml version="1.0" encoding="utf-8"?>
<!-- TaterTrade Ai, Created by Ludsoe. Version 4-->
<!-- Maintained by DeadAir. Version 5+-->
<aiscript name="tatertrade" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="12">
	<order id="TaterTrade" name="TaterTrade" description="Advanced Trader Logic" category="trade" infinite="true" allowinloop="false">
		<params>
			<!-- Define where the trader will base itself -->
			<param name="home" default="this.sector" type="object" text="{3282837,101}" comment="Home Sector/Station">
				<input_param name="class" value="[class.sector,class.station]"/>
			</param>
			<param name="returnhome" type="internal" default="false" text="{3282837,102}" comment="Return Home after completing a trade?"/>
			<!-- Some Range configurations -->
			<param name="minbuy" default="0" type="internal" text="{1041, 10066}" comment="Min gate distance to buy. Buy range supported if $minbuy and $maxbuy are provided"/>
			<param name="maxbuy" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max" type="number" text="{1041, 10054}" comment="Max gate distance to buy. Buy range supported if $minbuy and $maxbuy are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max * 2"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="minsell" default="0" type="internal" text="{1041, 10068}" comment="Min gate distance to sell. Sell range supported if $minsell and $maxsell are provided"/>
			<param name="maxsell" default="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max" type="number" text="{1041, 10057}" comment="Max gate distance to sell. Sell range supported if $minsell and $maxsell are provided">
				<input_param name="startvalue" value="0"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="[@this.ship.commander.tradenpc.skill.management, @this.ship.pilot.skill.piloting].max * 2"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="distancecheck" type="bool" default="false" text="{3282837,103}" comment="Should we compare distances between trade deals?"/>
			<param name="distancecheckpercent" default="2" type="number" text="{3282837,104}" comment="How much of a penalty each jump is.">
				<input_param name="startvalue" value="2"/>
				<input_param name="min" value="1"/>
				<input_param name="max" value="10"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="discount" default="100" type="number" text="{3282837,105}" comment="How much we pay at stations.">
				<input_param name="startvalue" value="100"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="200"/>
				<input_param name="step" value="5"/>
			</param>
			<param name="discount2" default="100" type="number" text="{3282837,106}" comment="How much we pay at stations.">
				<input_param name="startvalue" value="100"/>
				<input_param name="min" value="0"/>
				<input_param name="max" value="200"/>
				<input_param name="step" value="5"/>
			</param>
			<param name="bypass" type="bool" default="false" text="{3282837,107}" comment="Do we ignore faction restrictions on owned stations?"/>
			<param name="fasttrade" type="bool" default="false" text="{3282837,108}" comment="Attempt to optimise the search engine by skipping deals we deem improfitable."/>
			<param name="stationmode" type="bool" default="false" text="{3282837,109}" comment="When enabled, toggles the trader into station trader mode."/>
			<param name="blackmarket" type="bool" default="false" text="{3282837,110}" comment="When enabled, allows the trader to trade illegal wares when in station trader mode."/>
			<!-- What are we hauling? -->
			<param name="warebasket" default="[]" type="list" text="{1041, 10146}" comment="Wares">
				<input_param name="type" value="'ware'"/>
				<input_param name="cancarry" value="this.ship"/>
			</param>
			<param name="usepresets" type="bool" default="true" text="{3282837,111}" comment="Button to enable presets."/>
			<param name="allwares" type="bool" default="false" text="{3282837,112}" comment="Enable all wares in the basket."/>
			<param name="legalwares" type="bool" default="true" text="{3282837,113}" comment="Enable all the legal wares."/>
			<param name="illegalwares" type="bool" default="false" text="{3282837,114}" comment="Enable all the illegal wares."/>
			<param name="shipbuildingwares" type="bool" default="false" text="{3282837,115}" comment="Enable all the shipbuilding wares."/>
			<param name="stationbuildingwares" type="bool" default="false" text="{3282837,116}" comment="Enable all the stationbuilding wares."/>
			<param name="hightechwares" type="bool" default="false" text="{3282837,117}" comment="Enable all the HichTech wares."/>
			<param name="refinedwares" type="bool" default="false" text="{3282837,118}" comment="Enable all the Refined wares."/>
			<param name="biowares" type="bool" default="false" text="{3282837,119}" comment="Enable all the Bio wares."/>
			<param name="largelegalwares" type="bool" default="false" text="{3282837,124}" comment="Enable all large volume legal wares."/>
			<param name="mediumlegalwares" type="bool" default="false" text="{3282837,125}" comment="Enable all medium volume legal wares."/>
			<param name="smalllegalwares" type="bool" default="false" text="{3282837,126}" comment="Enable all small volume legal wares."/>
			<!-- Allow Players to exclude sectors for whatever reason. -->
			<param name="excludedsectors" default="[]" type="list" text="{3282837,120}" comment="Sectors the player wants excluded from trade searches.">
				<input_param name="type" value="'object'"/>
				<input_param name="class" value="[class.sector]"/>
			</param>
			<param name="includedsectors" default="[]" type="list" text="{3282837,121}" comment="Sectors the player wants included in trade searches.">
				<input_param name="type" value="'object'"/>
				<input_param name="class" value="[class.sector]"/>
			</param>
			<!-- Allow Players to exclude entire factions from the traders trade lists. -->
			<param name="enablebans" type="bool" default="false" text="{3282837,122}" comment="Enable faction trade bans?"/>
			<param name="playerban" type="bool" default="false" text="{20203,101}" comment="Ban faction from trade lists?"/>
			<!-- Argon Based Factions -->
			<param name="argonban" type="bool" default="false" text="{20203,201}" comment="Ban faction from trade lists?"/>
			<param name="antigoneban" type="bool" default="false" text="{20203,301}" comment="Ban faction from trade lists?"/>
			<!-- Teladi Based Factions -->
			<param name="teladiban" type="bool" default="false" text="{20203,601}" comment="Ban faction from trade lists?"/>
			<param name="ministryban" type="bool" default="false" text="{20203,701}" comment="Ban faction from trade lists?"/>
			<!-- Paranid Based Factions -->
			<param name="paranidban" type="bool" default="false" text="{20203,401}" comment="Ban faction from trade lists?"/>
			<param name="holyorderban" type="bool" default="false" text="{20203,501}" comment="Ban faction from trade lists?"/>
			<param name="allianceban" type="bool" default="false" text="{20203,801}" comment="Ban faction from trade lists?"/>
			<param name="trinityban" type="bool" default="false" text="{20203,2301}" comment="Ban faction from trade lists?"/>
			<!-- Split Based Factions -->
			<param name="splitban" type="bool" default="false" text="{20203,2001}" comment="Ban faction from trade lists?"/>
			<param name="freesplitban" type="bool" default="false" text="{20203,1601}" comment="Ban faction from trade lists?"/>
			<param name="courtban" type="bool" default="false" text="{20203,1801}" comment="Ban faction from trade lists?"/>
			<!-- Pirate Factions -->
			<param name="buccaneersban" type="bool" default="false" text="{20203,2401}" comment="Ban faction from trade lists?"/>
			<param name="fallensplitban" type="bool" default="false" text="{20203,1701}" comment="Ban faction from trade lists?"/>
			<param name="hatikvahban" type="bool" default="false" text="{20203,901}" comment="Ban faction from trade lists?"/>
			<param name="scaleplateban" type="bool" default="false" text="{20203,1001}" comment="Ban faction from trade lists?"/>
			<!-- Terran -->
			<param name="pioneersban" type="bool" default="false" text="{20203,2901}" comment="Ban faction from trade lists?"/>
			<param name="terranban" type="bool" default="false" text="{20203,3001}" comment="Ban faction from trade lists?"/>
			<!-- If your looking into tweaking this, be aware that high space speeds may cause performance issues. -->
			<param name="scanspeed" default="5" type="number" text="Scan Speed" comment="How fast do we calculate?">
				<input_param name="startvalue" value="5"/>
				<input_param name="min" value="1"/>
				<input_param name="max" value="15"/>
				<input_param name="step" value="1"/>
			</param>
			<param name="enablelogbook" type="bool" default="true" text="{3282837,129}" comment="Enable logbook messages?"/>
			<!-- Can't get faction selection window working ffs menu_map.lua 2347-->
		</params>
		<skill min="20"/>
		<!-- Not any hotshot can be a tatertrader, theres standards ye know? -->
		<requires>
			<match shiptype="shiptype.lasertower" negate="true"/>
		</requires>
	</order>
	<interrupts>
		<handler ref="SectorChangeHandler"/>
		<handler ref="AttackHandler"/>
		<handler ref="MissileLockHandler"/>
		<handler ref="ScannedHandler"/>
		<handler ref="InspectedHandler"/>
		<handler ref="FoundAbandonedHandler"/>
		<handler ref="FoundLockboxHandler"/>
		<handler ref="ResupplyHandler"/>
		<handler ref="TargetInvalidHandler"/>
		<handler ref="TideHandler"/>
	</interrupts>
	<init>
		<!-- <set_value name="$object" exact="this.assignedcontrolled" /> -->
		<set_value name="$TaterDebugChance" exact="false"/>
		<set_value name="$debugchance" exact="0"/>
		<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Starting Log File Version: 10'" output="false" append="false" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
		<set_order_syncpoint_reached order="this.ship.order"/>
		<set_command command="command.searchtrades"/>
		<set_command_action commandaction="commandaction.searchingtrades"/>
		<include_interrupt_actions ref="GetBlacklistgroup"/>
		<!-- <set_value name="$object" exact="[]" />  -->
		<!-- Im gonna have to do this here, if i want to make it easier to add new factions. -->
		<!-- <create_list name="$bannedfactions" /> -->
		<set_value name="$bannedfactions" exact="[]"/>
		<do_if value="$enablebans">
			<!--  <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Adding factions to banned list!'" output="false" append="true" /> -->
			<do_if value="$playerban">
				<append_to_list name="$bannedfactions" exact="faction.player"/>
			</do_if>
			<do_if value="$argonban">
				<append_to_list name="$bannedfactions" exact="faction.argon"/>
			</do_if>
			<do_if value="$antigoneban">
				<append_to_list name="$bannedfactions" exact="faction.antigone"/>
			</do_if>
			<do_if value="$paranidban">
				<append_to_list name="$bannedfactions" exact="faction.paranid"/>
			</do_if>
			<do_if value="$holyorderban">
				<append_to_list name="$bannedfactions" exact="faction.holyorder"/>
			</do_if>
			<do_if value="$allianceban">
				<append_to_list name="$bannedfactions" exact="faction.alliance"/>
			</do_if>
			<do_if value="$trinityban">
				<append_to_list name="$bannedfactions" exact="faction.trinity"/>
			</do_if>
			<do_if value="$teladiban ">
				<append_to_list name="$bannedfactions" exact="faction.teladi"/>
			</do_if>
			<do_if value="$ministryban">
				<append_to_list name="$bannedfactions" exact="faction.ministry"/>
			</do_if>
			<do_if value="$splitban">
				<append_to_list name="$bannedfactions" exact="faction.split"/>
			</do_if>
			<do_if value="$freesplitban">
				<append_to_list name="$bannedfactions" exact="faction.freesplit"/>
			</do_if>
			<do_if value="$courtban">
				<append_to_list name="$bannedfactions" exact="faction.court"/>
			</do_if>
			<do_if value="$hatikvahban">
				<append_to_list name="$bannedfactions" exact="faction.hatikvah"/>
			</do_if>
			<do_if value="$scaleplateban">
				<append_to_list name="$bannedfactions" exact="faction.scaleplate"/>
			</do_if>
			<do_if value="$buccaneersban">
				<append_to_list name="$bannedfactions" exact="faction.buccaneers"/>
			</do_if>
			<do_if value="$fallensplitban">
				<append_to_list name="$bannedfactions" exact="faction.fallensplit"/>
			</do_if>
			<do_if value="$pioneersban">
				<append_to_list name="$bannedfactions" exact="faction.pioneers"/>
			</do_if>
			<do_if value="$terranban">
				<append_to_list name="$bannedfactions" exact="faction.terran"/>
			</do_if>
		</do_if>
	</init>
	<patch sinceversion="2">
		<do_if value="$discount2 == null">
			<set_value name="$discount2" exact="100"/>
		</do_if>
	</patch>
	<patch sinceversion="3">
		<do_if value="$fasttrade == null">
			<set_value name="$fasttrade" exact="false"/>
		</do_if>
		<do_if value="$usepresets == null">
			<set_value name="$usepresets" exact="false"/>
		</do_if>
		<do_if value="$allwares == null">
			<set_value name="$allwares" exact="false"/>
		</do_if>
		<do_if value="$legalwares == null">
			<set_value name="$legalwares" exact="false"/>
		</do_if>
		<do_if value="$illegalwares == null">
			<set_value name="$illegalwares" exact="false"/>
		</do_if>
		<do_if value="$shipbuildingwares == null">
			<set_value name="$shipbuildingwares" exact="false"/>
		</do_if>
		<do_if value="$stationbuildingwares == null">
			<set_value name="$stationbuildingwares" exact="false"/>
		</do_if>
		<do_if value="$hightechwares == null">
			<set_value name="$hightechwares" exact="false"/>
		</do_if>
		<do_if value="$refinedwares == null">
			<set_value name="$refinedwares" exact="false"/>
		</do_if>
		<do_if value="$biowares == null">
			<set_value name="$biowares" exact="false"/>
		</do_if>
		<do_if value="$excludedsectors == null">
			<create_list name="$excludedsectors"/>
		</do_if>
	</patch>
	<patch sinceversion="4">
		<do_if value="$bannedfactions == null">
			<create_list name="$bannedfactions"/>
		</do_if>
		<do_if value="$enablebans == null">
			<set_value name="$enablebans" exact="false"/>
		</do_if>
		<do_if value="$distancecheck == null">
			<set_value name="$distancecheck" exact="false"/>
		</do_if>
		<do_if value="$StationTrade == null">
			<set_value name="$StationTrade" exact="false"/>
		</do_if>
		<do_if value="$scantick == null">
			<set_value name="$scantick" exact="0"/>
		</do_if>
		<do_if value="$stationmode == null">
			<set_value name="$stationmode" exact="false"/>
		</do_if>
		<do_if value="$stockratio == null">
			<set_value name="$stockratio" exact="30"/>
		</do_if>
		<do_if value="$includedsectors == null">
			<create_list name="$includedsectors"/>
		</do_if>
		<do_if value="$scanspeed == null">
			<set_value name="$scanspeed" exact="5"/>
		</do_if>
		<do_if value="$blackmarket == null">
			<set_value name="$blackmarket" exact="false"/>
		</do_if>
		<do_if value="$scantickrate == null">
			<set_value name="$scantickrate" exact="5"/>
		</do_if>
	</patch>
	<patch sinceversion="5">
		<do_if value="$distancecheckpercent == null">
			<set_value name="$distancecheckpercent" exact="2"/>
		</do_if>
	</patch>
	<patch sinceversion="6">
		<do_if value="$largelegalwares == null">
			<set_value name="$largelegalwares" exact="false"/>
		</do_if>
		<do_if value="$mediumlegalwares == null">
			<set_value name="$mediumlegalwares" exact="false"/>
		</do_if>
		<do_if value="$smalllegalwares == null">
			<set_value name="$smalllegalwares" exact="false"/>
		</do_if>
		<do_if value="this.assignedcontrolled.hasownaccount and not this.assignedcontrolled.tradeorders.count">
			<!-- NB: at the moment, ships only have temporary accounts set up when they have trade orders. These temp accounts are cleared when the trades are cleaned up. -->
			<remove_object_account object="this.assignedcontrolled" transfer="true"/>
		</do_if>
	</patch>
	<patch sinceversion="10">
		<do_if value="$enablelogbook == null">
			<set_value name="$enablelogbook" exact="true"/>
		</do_if>
	</patch>
	<!-- Lets code the actual trade logic here. -->
	<attention min="unknown">
		<actions>
			<label name="verystart"/>
			<set_value name="$scantick" exact="0"/>
			<set_value name="$scantickrate" exact="5"/>
			<do_if value="not ($scanspeed == null)">
				<set_value name="$scantickrate" exact="$scanspeed"/>
			</do_if>
			<do_if value="not $usepresets">
				<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Use presets disabled! Skipping Preset Section.'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
				<resume label="start"/>
			</do_if>
			<label name="detectpresets"/>
			<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Detecting Presets!'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
			<label name="warelistloop"/>
			<!-- Let's try to clean this up DA-->
			<!-- Goal one, stop this loop DA-->
			<!-- We will define the lists for the parameters here, then actually add them to ware basket in next label DA-->
			<!-- We will set the ware lists here, then process in the next label DA-->
			<do_if value="$usepresets">
				<do_if value="$allwares">
					<set_value name="$allwareslist" exact="[ware.spacefuel,ware.spaceweed,ware.advancedcomposites,ware.advancedelectronics,ware.antimattercells,ware.antimatterconverters,ware.claytronics,
				ware.dronecomponents,ware.engineparts,ware.fieldcoils,ware.hullparts,ware.refinedmetals,ware.scanningarrays,ware.shieldcomponents,ware.siliconwafers,
				ware.teladianium,ware.turretcomponents,ware.water,ware.wheat,ware.energycells,ware.foodrations,ware.graphene,ware.majadust,ware.majasnails,ware.meat,
				ware.microchips,ware.quantumtubes,ware.medicalsupplies,ware.missilecomponents,ware.nostropoil,ware.plasmaconductors,ware.smartchips,ware.sojabeans,
				ware.sojahusk,ware.spices,ware.sunriseflowers,ware.superfluidcoolant,ware.swampplant,ware.weaponcomponents]"/>
					<!-- lets make this compatible for DLC and non DLC DA-->
					<do_if value="@ware.cheltmeat.id">
						<append_list_elements name="$allwareslist" other="[ware.cheltmeat,ware.scruffinfruits]"/>
					</do_if>
					<!-- CoH -->
					<do_if value="@ware.computronicsubstrate.id">
						<append_list_elements name="$allwareslist" other="[ware.computronicsubstrate,ware.metallicmicrolattice,ware.proteinpaste,ware.siliconcarbide,ware.terranmre]"/>
					</do_if>
					<resume label="addtowarelist"/>
				</do_if>
				<do_else>
					<!-- this should solve the zombie problem but will also clear all player added wares -->
					<!-- going to have to add yet another parameter, sorry vectorial -->
					<clear_list list="$warebasket"/>
					<do_if value="$legalwares">
						<set_value name="$legalwareslist" exact="[ware.advancedcomposites,ware.advancedelectronics,ware.antimattercells,ware.antimatterconverters,ware.claytronics,
					ware.dronecomponents,ware.engineparts,ware.fieldcoils,ware.hullparts,ware.refinedmetals,ware.scanningarrays,ware.shieldcomponents,ware.siliconwafers,
					ware.teladianium,ware.turretcomponents,ware.water,ware.wheat,ware.energycells,ware.foodrations,ware.graphene,ware.majasnails,ware.meat,
					ware.microchips,ware.quantumtubes,ware.medicalsupplies,ware.missilecomponents,ware.nostropoil,ware.plasmaconductors,ware.smartchips,ware.sojabeans,
					ware.sojahusk,ware.spices,ware.sunriseflowers,ware.superfluidcoolant,ware.swampplant,ware.weaponcomponents]"/>
						<!-- lets make this compatible for DLC and non DLC DA-->
						<do_if value="@ware.cheltmeat.id">
							<append_list_elements name="$legalwareslist" other="[ware.cheltmeat,ware.scruffinfruits]"/>
						</do_if>
						<!-- CoH -->
						<do_if value="@ware.computronicsubstrate.id">
							<append_list_elements name="$legalwareslist" other="[ware.computronicsubstrate,ware.metallicmicrolattice,ware.proteinpaste,ware.siliconcarbide,ware.terranmre]"/>
						</do_if>
					</do_if>
					<do_if value="$illegalwares">
						<set_value name="$illegalwareslist" exact="[ware.spacefuel,ware.spaceweed,ware.majadust]"/>
						<!-- CoH -->
						<do_if value="@ware.computronicsubstrate.id">
							<append_list_elements name="$illegalwareslist" other="[ware.stimulants]"/>
						</do_if>
					</do_if>
					<do_if value="$shipbuildingwares">
						<set_value name="$shipbuildingwareslist" exact="[ware.advancedelectronics,ware.antimatterconverters,ware.engineparts,ware.hullparts,ware.smartchips,ware.weaponcomponents]"/>
						<!-- CoH -->
						<do_if value="@ware.computronicsubstrate.id">
							<append_list_elements name="$shipbuildingwareslist" other="[ware.computronicsubstrate,ware.metallicmicrolattice]"/>
						</do_if>
					</do_if>
					<do_if value="$stationbuildingwares">
						<set_value name="$stationbuildingwareslist" exact="[ware.claytronics,ware.energycells,ware.hullparts]"/>
						<!-- CoH -->
						<do_if value="@ware.computronicsubstrate.id">
							<append_list_elements name="$stationbuildingwareslist" other="[ware.computronicsubstrate,ware.siliconcarbide]"/>
						</do_if>
					</do_if>
					<do_if value="$hightechwares">
						<set_value name="$hightechwareslist" exact="[ware.advancedcomposites,ware.advancedelectronics,ware.antimatterconverters,ware.dronecomponents,ware.engineparts,
						ware.fieldcoils,ware.hullparts,ware.microchips,ware.missilecomponents,ware.plasmaconductors,ware.quantumtubes,ware.scanningarrays,ware.shieldcomponents,
						ware.smartchips,ware.turretcomponents,ware.weaponcomponents]"/>
						<!-- CoH -->
						<do_if value="@ware.computronicsubstrate.id">
							<append_list_elements name="$hightechwareslist" other="[ware.computronicsubstrate,ware.metallicmicrolattice,ware.siliconcarbide]"/>
						</do_if>
					</do_if>
					<do_if value="$refinedwares">
						<set_value name="$refinedwareslist" exact="[ware.antimattercells,ware.energycells,ware.graphene,ware.superfluidcoolant,ware.refinedmetals,ware.siliconwafers,ware.teladianium]"/>
					</do_if>
					<do_if value="$biowares">
						<set_value name="$biowareslist" exact="[ware.spices,ware.meat,ware.wheat,ware.sojabeans,ware.majasnails,ware.sunriseflowers,ware.swampplant,ware.foodrations,ware.medicalsupplies,
						ware.sojahusk,ware.nostropoil,ware.water]"/>
						<!-- lets make this compatible for DLC and non DLC DA-->
						<do_if value="@ware.cheltmeat.id">
							<append_list_elements name="$biowareslist" other="[ware.cheltmeat,ware.scruffinfruits]"/>
						</do_if>
						<!-- CoH -->
						<do_if value="@ware.computronicsubstrate.id">
							<append_list_elements name="$biowareslist" other="[ware.proteinpaste,ware.terranmre]"/>
						</do_if>
					</do_if>
					<do_if value="$largelegalwares">
						<set_value name="$largelegalwareslist" exact="[ware.scanningarrays,ware.plasmaconductors,ware.advancedcomposites,ware.dronecomponents,ware.advancedelectronics,
						ware.claytronics,ware.quantumtubes,ware.microchips,ware.weaponcomponents,ware.turretcomponents]"/>
						<!-- CoH -->
						<do_if value="@ware.computronicsubstrate.id">
							<append_list_elements name="$largelegalwareslist" other="[ware.computronicsubstrate,ware.siliconcarbide]"/>
						</do_if>
					</do_if>
					<do_if value="$mediumlegalwares">
						<set_value name="$mediumlegalwareslist" exact="[ware.siliconwafers,ware.antimattercells,ware.teladianium,ware.superfluidcoolant,ware.engineparts,ware.fieldcoils,
						ware.refinedmetals,ware.hullparts,ware.antimatterconverters,ware.shieldcomponents]"/>
					</do_if>
					<do_if value="$smalllegalwares">
						<set_value name="$smalllegalwareslist" exact="[ware.majasnails,ware.water,ware.swampplant,ware.meat,ware.sunriseflowers,ware.sojabeans,ware.wheat,ware.spices,
						ware.missilecomponents,ware.medicalsupplies,ware.smartchips,ware.sojahusk,ware.energycells,ware.nostropoil,ware.foodrations]"/>
						<!-- Split -->
						<do_if value="@ware.cheltmeat.id">
							<append_list_elements name="$smalllegalwareslist" other="[ware.cheltmeat,ware.scruffinfruits]"/>
						</do_if>
						<!-- CoH -->
						<do_if value="@ware.computronicsubstrate.id">
							<append_list_elements name="$smalllegalwareslist" other="[ware.metallicmicrolattice,ware.proteinpaste,ware.terranmre]"/>
						</do_if>
					</do_if>
				</do_else>
			</do_if>
			<label name="addtowarelist"/>
			<!-- No looping, just checking if a ware list exists, then removing the list (prevents duplicates), and adding it back in DA-->
			<do_if value="$allwares">
				<remove_from_list name="$warebasket" list="$allwareslist" multiple="true"/>
				<append_list_elements name="$warebasket" other="$allwareslist"/>
			</do_if>
			<do_else>
				<do_if value="$legalwares">
					<remove_from_list name="$warebasket" list="$legalwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$legalwareslist"/>
				</do_if>
				<do_if value="$illegalwares">
					<remove_from_list name="$warebasket" list="$illegalwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$illegalwareslist"/>
				</do_if>
				<do_if value="$shipbuildingwares">
					<remove_from_list name="$warebasket" list="$shipbuildingwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$shipbuildingwareslist"/>
				</do_if>
				<do_if value="$stationbuildingwares">
					<remove_from_list name="$warebasket" list="$stationbuildingwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$stationbuildingwareslist"/>
				</do_if>
				<do_if value="$hightechwares">
					<remove_from_list name="$warebasket" list="$hightechwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$hightechwareslist"/>
				</do_if>
				<do_if value="$refinedwares">
					<remove_from_list name="$warebasket" list="$refinedwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$refinedwareslist"/>
				</do_if>
				<do_if value="$biowares">
					<remove_from_list name="$warebasket" list="$biowareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$biowareslist"/>
				</do_if>
				<do_if value="$largelegalwares">
					<remove_from_list name="$warebasket" list="$largelegalwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$largelegalwareslist"/>
				</do_if>
				<do_if value="$mediumlegalwares">
					<remove_from_list name="$warebasket" list="$mediumlegalwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$mediumlegalwareslist"/>
				</do_if>
				<do_if value="$smalllegalwares">
					<remove_from_list name="$warebasket" list="$smalllegalwareslist" multiple="true"/>
					<append_list_elements name="$warebasket" other="$smalllegalwareslist"/>
				</do_if>
			</do_else>
			<label name="start"/>
			<set_command command="command.searchtrades"/>
			<set_command_action commandaction="commandaction.searchingtrades"/>
			<!-- fixing clearing out of manual warebasket items thanks to maritz -->
			<!-- this would likely result in $warebasket being added to $usedwarebasket constantly, creating ever expanding workload from duplicates unless create_list clears it out FIXED-->
			<sort_list list="$warebasket" sortbyvalue="loop.element.volume" sortdescending="true"/>
			<do_if value="$usedwarebasket?">
				<clear_list list="$usedwarebasket"/>
			</do_if>
			<do_else>
				<create_list name="$usedwarebasket"/>
			</do_else>
			<append_list_elements name="$usedwarebasket" other="$warebasket"/>
			<shuffle_list list="$usedwarebasket"/>
			<!-- Figure out what we are ment to do, free trading or station supply. -->
			<!-- For now assuming sector based trade. -->
			<!-- remove old account DA-->
			<do_if value="this.assignedcontrolled.hasownaccount and not this.assignedcontrolled.tradeorders.count">
				<remove_object_account object="this.assignedcontrolled" transfer="true"/>
			</do_if>
			<do_if value="$home.isclass.space">
				<set_value name="$range" exact="$home"/>
				<!-- <append_to_list name="$includedsectors" exact="$home"/> -->
			</do_if>
			<do_if value="$home.isclass.station">
				<!-- The do_else was causing issues to get through, so lets attempt to filter by class -->
				<set_value name="$range" exact="$home.sector"/>
				<!-- <append_to_list name="$includedsectors" exact="$home.sector"/>  -->
				<do_if value="$home.owner == this.ship.owner">
					<!-- Check if the station we are assigned to is owned by the player, if yes it can be our commander now. -->
					<set_object_commander object="this.ship" commander="$home"/>
				</do_if>
			</do_if>
			<!-- Scan for sectors based on the range settings. -->
			<find_cluster_in_range distances="$clusterstable" multiple="true" object="$range" mindistance="$minbuy" maxdistance="$maxbuy"/>
			<do_if value="$bypass == true">
				<set_value name="$buyspaces" exact="$clusterstable.keys.sorted"/>
				<!-- sort them -->
			</do_if>
			<!-- new values for new blacklist stuff -->
			<set_value name="$buyspaceswithduplicates" exact="$clusterstable.keys.sorted"/>
			<set_value name="$buyspaceswithbanned" exact="[]"/>
			<set_value name="$buyspaceswithbannedclone" exact="[]"/>
			<set_value name="$buyspaces" exact="[]"/>
			<remove_value name="$clusterstable"/>
			<find_cluster_in_range distances="$clusterstable" multiple="true" object="$range" mindistance="$minsell" maxdistance="$maxsell"/>
			<do_if value="$bypass == true">
				<set_value name="$sellspaces" exact="$clusterstable.keys.sorted"/>
				<!-- sort them -->
			</do_if>
			<!-- new values for new blacklist stuff -->
			<set_value name="$sellspaceswithduplicates" exact="$clusterstable.keys.sorted"/>
			<set_value name="$sellspaceswithbanned" exact="[]"/>
			<set_value name="$sellspaceswithbannedclone" exact="[]"/>
			<set_value name="$sellspaces" exact="[]"/>
			<remove_value name="$clusterstable"/>
			<!-- More blacklist stuff from DA -->
			<!-- Use less restrictive method if $bypass == true -->
			<do_if value="$bypass == true">
				<!-- Remove cluster from buyspaces if it is not $range ($home but always a sector) and is part of blacklist. We lose potential sectors in a contested cluster but I would have to rewrite a lot to fix and I'm not feeling up to it -->
				<do_all exact="$buyspaces.count" counter="$blacklistcounter1" reverse="true">
					<wait exact="1ms"/>
					<find_sector name="$blacklistsectorlisttocheck" space="$buyspaces.{$blacklistcounter1}" multiple="true"/>
					<do_all exact="$blacklistsectorlisttocheck.count" counter="$blacklistsectorcounter1" reverse="true">
						<do_if value="($blacklistsectorlisttocheck.{$blacklistsectorcounter1} != $range) and (($blacklistsectorlisttocheck.{$blacklistsectorcounter1}.isblacklisted.{blacklisttype.sectoractivity}.{$blacklistgroup}.{this.assignedcontrolled}) or ($blacklistsectorlisttocheck.{$blacklistsectorcounter1}.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled}))">
							<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Removing ' + $buyspaces.{$blacklistcounter1}.knownname + ' from buyspaces - DA'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<remove_value name="$buyspaces.{$blacklistcounter1}"/>
							<break/>
						</do_if>
					</do_all>
				</do_all>
				<!-- Remove cluster from sellspaces, same as above -->
				<do_all exact="$sellspaces.count" counter="$blacklistcounter2" reverse="true">
					<wait exact="1ms"/>
					<find_sector name="$blacklistsectorlisttocheck" space="$sellspaces.{$blacklistcounter2}" multiple="true"/>
					<do_all exact="$blacklistsectorlisttocheck.count" counter="$blacklistsectorcounter2" reverse="true">
						<do_if value="($blacklistsectorlisttocheck.{$blacklistsectorcounter2} != $range) and (($blacklistsectorlisttocheck.{$blacklistsectorcounter2}.isblacklisted.{blacklisttype.sectoractivity}.{$blacklistgroup}.{this.assignedcontrolled}) or ($blacklistsectorlisttocheck.{$blacklistsectorcounter2}.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled}))">
							<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Removing ' + $sellspaces.{$blacklistcounter2}.knownname + ' from sellspaces - DA'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<remove_value name="$sellspaces.{$blacklistcounter2}"/>
							<break/>
						</do_if>
					</do_all>
				</do_all>
			</do_if>
			<!-- time for the improved blacklist stuff -->
			<do_else>
				<!-- Need to remove duplicates -->
				<do_all exact="$buyspaceswithduplicates.count" counter="$z">
					<do_if value="not $buyspaceswithbanned.indexof.{$buyspaceswithduplicates.{$z}}">
						<append_to_list name="$buyspaceswithbanned" exact="$buyspaceswithduplicates.{$z}"/>
						<append_to_list name="$buyspaceswithbannedclone" exact="$buyspaceswithduplicates.{$z}"/>
					</do_if>
				</do_all>
				<!-- Need to remove duplicates -->
				<do_all exact="$sellspaceswithduplicates.count" counter="$z">
					<do_if value="not $sellspaceswithbanned.indexof.{$sellspaceswithduplicates.{$z}}">
						<append_to_list name="$sellspaceswithbanned" exact="$sellspaceswithduplicates.{$z}"/>
						<append_to_list name="$sellspaceswithbannedclone" exact="$sellspaceswithduplicates.{$z}"/>
					</do_if>
				</do_all>
				<do_all exact="$buyspaceswithbanned.count" counter="$a">
					<wait exact="1ms"/>
					<!-- This loop starts with QueenIWantToBreakFree false -->
					<set_value name="$QueenIWantToBreakFree" exact="false"/>
					<do_if value="($buyspaceswithbanned.{$a}.isclass.cluster or $buyspaceswithbanned.{$a}.isclass.sector)">
						<find_sector name="$sectors" space="$buyspaceswithbanned.{$a}" multiple="true"/>
						<do_all exact="$sectors.count" counter="$b">
							<wait exact="1ms"/>
							<!-- if QueenIWantToBreakFree is true, then we tried to exit this already -->
							<do_if value="@$QueenIWantToBreakFree == true">
								<!-- this will break out of do_all sectors.count -->
								<break/>
							</do_if>
							<!-- if we reach here, this should be unnecessary -->
							<set_value name="$QueenIWantToBreakFree" exact="false"/>
							<set_value name="$sector" exact="$sectors.{$b}"/>
							<!-- Output info every time so we know what is being tested -->
							<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- Distance %6'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,this.assignedcontrolled.gatedistance.{$sector}.{$blacklistgroup}.{this.assignedcontrolled}]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<!-- Does the owner have relation of killall -->
							<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
							<do_if value="($sector != $range) and (faction.player.relationto.{$sector.trueowner} le -0.32)">
								<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- REMOVED BECAUSE SECTOR OWNER RELATION'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
								<remove_from_list name="$buyspaceswithbannedclone" exact="$buyspaceswithbanned.{$a}" multiple="true"/>
								<remove_value name="$sector"/>
								<set_value name="$QueenIWantToBreakFree" exact="true"/>
								<!-- this will break out of do_all sectors.count -->
								<break/>
							</do_if>
							<!-- Is the sector travel blacklisted -->
							<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
							<do_elseif value="($sector != $range) and ($sector.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled})">
								<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- REMOVED BECAUSE SECTOR TRAVEL BAN'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
								<remove_from_list name="$buyspaceswithbannedclone" exact="$buyspaceswithbanned.{$a}" multiple="true"/>
								<remove_value name="$sector"/>
								<set_value name="$QueenIWantToBreakFree" exact="true"/>
								<!-- this will break out of do_all sectors.count -->
								<break/>
							</do_elseif>
							<!-- Is the sector activity blacklisted (Only matters for end sector)-->
							<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
							<do_elseif value="($sector != $range) and ($sector.isblacklisted.{blacklisttype.sectoractivity}.{$blacklistgroup}.{this.assignedcontrolled})">
								<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- REMOVED BECAUSE SECTOR ACTIVITY BAN'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
								<remove_from_list name="$buyspaceswithbannedclone" exact="$buyspaceswithbanned.{$a}" multiple="true"/>
								<remove_value name="$sector"/>
								<set_value name="$QueenIWantToBreakFree" exact="true"/>
								<!-- this will break out of do_all sectors.count -->
								<break/>
							</do_elseif>
							<!-- If we reach here, the sector is fine but what about the route -->
							<do_else>
								<!-- if we reach here, this should be unnecessary -->
								<set_value name="$QueenIWantToBreakFree" exact="false"/>
								<do_if value="$range.gatedistance.{$sector}.{$blacklistgroup}.{this.assignedcontrolled} lt 0">
									<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- JumpPath.count %6 -- REMOVED BECAUSE INVALID JUMP PATH'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,@$range.gatedistance.{$sector}.{$blacklistgroup}.{this.assignedcontrolled}]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
									<remove_from_list name="$buyspaceswithbannedclone" exact="$buyspaceswithbanned.{$a}" multiple="true"/>
									<remove_value name="$sector"/>
									<set_value name="$QueenIWantToBreakFree" exact="true"/>
									<!-- this will break out of do_all sectors.count -->
									<break/>
								</do_if>
								<get_jump_path component="$jumppath" multiple="true" useblacklist="$blacklistgroup" refobject="this.assignedcontrolled">
									<start object="$range"/>
									<end object="$sector"/>
								</get_jump_path>
								<!-- if we somehow can't get a jump route but we want to make sure not to remove our home sector -->
								<do_if value="(($jumppath == null) or ($jumppath.count == 0 )) and ($range != $sector)">
									<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- JumpPath.count %6 -- REMOVED BECAUSE INVALID JUMP PATH'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,@$jumppath.count]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
									<remove_from_list name="$buyspaceswithbannedclone" exact="$buyspaceswithbanned.{$a}" multiple="true"/>
									<remove_value name="$sector"/>
									<remove_value name="$jumppath"/>
									<set_value name="$QueenIWantToBreakFree" exact="true"/>
									<!-- this will break out of do_all sectors.count -->
									<break/>
								</do_if>
								<!-- we either have a valid jump path or are testing our home sector -->
								<do_all exact="$jumppath.count" counter="$c" reverse="true">
									<wait exact="1ms"/>
									<!-- if QueenIWantToBreakFree is true, then we tried to exit this already -->
									<do_if value="@$QueenIWantToBreakFree == true">
										<!-- this will break out of do_all jumppath.count -->
										<break/>
									</do_if>
									<!-- if we reach here, this should be unnecessary -->
									<set_value name="$QueenIWantToBreakFree" exact="false"/>
									<!-- we only want to test clusters and sectors because gates don't have owners...i think -->
									<do_if value="$jumppath.{$c}.isclass.cluster or $jumppath.{$c}.isclass.sector">
										<!-- Output info every time so we know what is being tested -->
										<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- (%6)JumpPath.name %7'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,$c,@$jumppath.{$c}.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
										<!-- Does the owner of any sectors on our route have relation of killall -->
										<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
										<do_if value="($jumppath.{$c} != $range) and (faction.player.relationto.{$jumppath.{$c}.trueowner} le -0.32)">
											<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- (%6)JumpPath.name %7 -- REMOVED BECAUSE ROUTE OWNER RELATION'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,$c,@$jumppath.{$c}.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
											<remove_from_list name="$buyspaceswithbannedclone" exact="$buyspaceswithbanned.{$a}" multiple="true"/>
											<remove_value name="$sector"/>
											<remove_value name="$jumppath"/>
											<set_value name="$QueenIWantToBreakFree" exact="true"/>
											<!-- this will break out of do_all jumppath.count -->
											<break/>
										</do_if>
										<!-- Is any sector on our route travel blacklisted -->
										<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
										<do_elseif value="($jumppath.{$c} != $range) and ($jumppath.{$c}.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled})">
											<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- (%4)Sector.name %5 -- (%6)JumpPath.name %7 -- REMOVED BECAUSE ROUTE TRAVEL BAN'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,$c,@$jumppath.{$c}.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
											<remove_from_list name="$buyspaceswithbannedclone" exact="$buyspaceswithbanned.{$a}" multiple="true"/>
											<remove_value name="$sector"/>
											<remove_value name="$jumppath"/>
											<set_value name="$QueenIWantToBreakFree" exact="true"/>
											<!-- this will break out of do_all jumppath.count -->
											<break/>
										</do_elseif>
									</do_if>
								</do_all>
							</do_else>
						</do_all>
					</do_if>
					<!-- I want to place this higher up, but it could skip everything -->
					<!-- if QueenIWantToBreakFree is true, then we tried to escape already so goto next count -->
					<do_if value="@$QueenIWantToBreakFree == true">
						<!-- this will continue to the next buyspaces.count -->
						<continue/>
					</do_if>
					<!-- if we reached here, the buyspace passed all tests -->
					<!-- lets just make sure it's not a null value and it's either a cluster or a sector -->
					<do_if value="@$QueenIWantToBreakFree == false and $buyspaceswithbanned.{$a} != null and ($buyspaceswithbanned.{$a}.isclass.cluster or $buyspaceswithbanned.{$a}.isclass.sector)">
						<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Buyspace.{%2}.name %3 -- ADDED TO FINAL BUYSPACES LIST'.[player.age,$a,@$buyspaceswithbanned.{$a}.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
						<do_if value="$buyspaceswithbanned.{$a}.isclass.cluster">
							<find_sector name="$sectors" space="$buyspaceswithbanned.{$a}" multiple="true"/>
							<do_for_each name="$sector" in="$sectors">
								<append_to_list name="$buyspaces" exact="$sector"/>
							</do_for_each>
						</do_if>
						<do_else>
							<append_to_list name="$buyspaces" exact="$buyspaceswithbanned.{$a}"/>
						</do_else>
					</do_if>
				</do_all>
				<!--time for sellspaces -->
				<do_all exact="$sellspaceswithbanned.count" counter="$a">
					<wait exact="1ms"/>
					<!-- This loop starts with QueenIWantToBreakFree false -->
					<set_value name="$QueenIWantToBreakFree" exact="false"/>
					<do_if value="($sellspaceswithbanned.{$a}.isclass.cluster or $sellspaceswithbanned.{$a}.isclass.sector) and ($sellspaceswithbanned.{$a} != $range)">
						<find_sector name="$sectors" space="$sellspaceswithbanned.{$a}" multiple="true"/>
						<do_all exact="$sectors.count" counter="$b">
							<wait exact="1ms"/>
							<!-- if QueenIWantToBreakFree is true, then we tried to exit this already -->
							<do_if value="@$QueenIWantToBreakFree == true">
								<!-- this will break out of do_all sectors.count -->
								<break/>
							</do_if>
							<!-- if we reach here, this should be unnecessary -->
							<set_value name="$QueenIWantToBreakFree" exact="false"/>
							<set_value name="$sector" exact="$sectors.{$b}"/>
							<!-- Output info every time so we know what is being tested -->
							<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- Distance %6'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,this.assignedcontrolled.gatedistance.{$sector}.{$blacklistgroup}.{this.assignedcontrolled}]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<!-- Does the owner have relation of killall -->
							<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
							<do_if value="($sector != $range) and (faction.player.relationto.{$sector.trueowner} le -0.32)">
								<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- REMOVED BECAUSE SECTOR OWNER RELATION'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
								<remove_from_list name="$sellspaceswithbannedclone" exact="$sellspaceswithbanned.{$a}" multiple="true"/>
								<remove_value name="$sector"/>
								<set_value name="$QueenIWantToBreakFree" exact="true"/>
								<!-- this will break out of do_all sectors.count -->
								<break/>
							</do_if>
							<!-- Is the sector travel blacklisted -->
							<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
							<do_elseif value="($sector != $range) and ($sector.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled})">
								<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- REMOVED BECAUSE SECTOR TRAVEL BAN'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
								<remove_from_list name="$sellspaceswithbannedclone" exact="$sellspaceswithbanned.{$a}" multiple="true"/>
								<remove_value name="$sector"/>
								<set_value name="$QueenIWantToBreakFree" exact="true"/>
								<!-- this will break out of do_all sectors.count -->
								<break/>
							</do_elseif>
							<!-- Is the sector activity blacklisted (Only matters for end sector)-->
							<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
							<do_elseif value="($sector != $range) and ($sector.isblacklisted.{blacklisttype.sectoractivity}.{$blacklistgroup}.{this.assignedcontrolled})">
								<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- REMOVED BECAUSE SECTOR ACTIVITY BAN'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
								<remove_from_list name="$sellspaceswithbannedclone" exact="$sellspaceswithbanned.{$a}" multiple="true"/>
								<remove_value name="$sector"/>
								<set_value name="$QueenIWantToBreakFree" exact="true"/>
								<!-- this will break out of do_all sectors.count -->
								<break/>
							</do_elseif>
							<!-- If we reach here, the sector is fine but what about the route -->
							<do_else>
								<!-- if we reach here, this should be unnecessary -->
								<set_value name="$QueenIWantToBreakFree" exact="false"/>
								<do_if value="$range.gatedistance.{$sector}.{$blacklistgroup}.{this.assignedcontrolled} lt 0">
									<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- JumpPath.count %6 -- REMOVED BECAUSE INVALID JUMP PATH'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,@$range.gatedistance.{$sector}.{$blacklistgroup}.{this.assignedcontrolled}]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
									<remove_from_list name="$sellspaceswithbannedclone" exact="$sellspaceswithbanned.{$a}" multiple="true"/>
									<remove_value name="$sector"/>
									<set_value name="$QueenIWantToBreakFree" exact="true"/>
									<!-- this will break out of do_all sectors.count -->
									<break/>
								</do_if>
								<get_jump_path component="$jumppath" multiple="true" useblacklist="$blacklistgroup" refobject="this.assignedcontrolled">
									<start object="$range"/>
									<end object="$sector"/>
								</get_jump_path>
								<!-- if we somehow can't get a jump route but we want to make sure not to remove our home sector -->
								<do_if value="(($jumppath == null) or ($jumppath.count == 0 )) and ($range != $sector)">
									<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- JumpPath.count %6 -- REMOVED BECAUSE INVALID JUMP PATH'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,@$jumppath.count]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
									<remove_from_list name="$sellspaceswithbannedclone" exact="$sellspaceswithbanned.{$a}" multiple="true"/>
									<remove_value name="$sector"/>
									<remove_value name="$jumppath"/>
									<set_value name="$QueenIWantToBreakFree" exact="true"/>
									<!-- this will break out of do_all sectors.count -->
									<break/>
								</do_if>
								<!-- we either have a valid jump path or are testing our home sector -->
								<do_all exact="$jumppath.count" counter="$c" reverse="true">
									<wait exact="1ms"/>
									<!-- if QueenIWantToBreakFree is true, then we tried to exit this already -->
									<do_if value="@$QueenIWantToBreakFree == true">
										<!-- this will break out of do_all jumppath.count -->
										<break/>
									</do_if>
									<!-- if we reach here, this should be unnecessary -->
									<set_value name="$QueenIWantToBreakFree" exact="false"/>
									<!-- we only want to test clusters and sectors because gates don't have owners...i think -->
									<do_if value="$jumppath.{$c}.isclass.cluster or $jumppath.{$c}.isclass.sector">
										<!-- Output info every time so we know what is being tested -->
										<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- (%6)JumpPath.name %7'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,$c,@$jumppath.{$c}.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
										<!-- Does the owner of any sectors on our route have relation of killall -->
										<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
										<do_if value="($jumppath.{$c} != $range) and (faction.player.relationto.{$jumppath.{$c}.trueowner} le -0.32)">
											<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- (%6)JumpPath.name %7 -- REMOVED BECAUSE ROUTE OWNER RELATION'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,$c,@$jumppath.{$c}.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
											<remove_from_list name="$sellspaceswithbannedclone" exact="$sellspaceswithbanned.{$a}" multiple="true"/>
											<remove_value name="$sector"/>
											<remove_value name="$jumppath"/>
											<set_value name="$QueenIWantToBreakFree" exact="true"/>
											<!-- this will break out of do_all jumppath.count -->
											<break/>
										</do_if>
										<!-- Is any sector on our route travel blacklisted -->
										<!-- if our home sector is on a list but the player assigned us here, then ignore list -->
										<do_elseif value="($jumppath.{$c} != $range) and ($jumppath.{$c}.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled})">
											<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- (%4)Sector.name %5 -- (%6)JumpPath.name %7 -- REMOVED BECAUSE ROUTE TRAVEL BAN'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname,$b,@$sector.knownname,$c,@$jumppath.{$c}.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
											<remove_from_list name="$sellspaceswithbannedclone" exact="$sellspaceswithbanned.{$a}" multiple="true"/>
											<remove_value name="$sector"/>
											<remove_value name="$jumppath"/>
											<set_value name="$QueenIWantToBreakFree" exact="true"/>
											<!-- this will break out of do_all jumppath.count -->
											<break/>
										</do_elseif>
									</do_if>
								</do_all>
							</do_else>
						</do_all>
					</do_if>
					<!-- I want to place this higher up, but it could skip everything -->
					<!-- if QueenIWantToBreakFree is true, then we tried to escape already so goto next count -->
					<do_if value="@$QueenIWantToBreakFree == true">
						<!-- this will continue to the next Sellspaces.count -->
						<continue/>
					</do_if>
					<!-- if we reached here, the Sellspace passed all tests -->
					<!-- lets just make sure it's not a null value and it's either a cluster or a sector -->
					<do_if value="@$QueenIWantToBreakFree == false and $sellspaceswithbanned.{$a} != null and ($sellspaceswithbanned.{$a}.isclass.cluster or $sellspaceswithbanned.{$a}.isclass.sector)">
						<debug_to_file name="this.assignedcontrolled.idcode" directory="'TaterTrader'" text="'MOD: TestBlacklistFiltering -- %1 -- Sellspace.{%2}.name %3 -- ADDED TO FINAL SELLSPACES LIST'.[player.age,$a,@$sellspaceswithbanned.{$a}.knownname]" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
						<do_if value="$sellspaceswithbanned.{$a}.isclass.cluster">
							<find_sector name="$sectors" space="$sellspaceswithbanned.{$a}" multiple="true"/>
							<do_for_each name="$sector" in="$sectors">
								<append_to_list name="$sellspaces" exact="$sector"/>
							</do_for_each>
						</do_if>
						<do_else>
							<append_to_list name="$sellspaces" exact="$sellspaceswithbanned.{$a}"/>
						</do_else>
					</do_if>
				</do_all>
				<remove_value name="$buyspaceswithduplicates"/>
				<remove_value name="$buyspaceswithbanned"/>
				<remove_value name="$buyspaceswithbannedclone"/>
				<remove_value name="$sellspaceswithduplicates"/>
				<remove_value name="$sellspaceswithbanned"/>
				<remove_value name="$sellspaceswithbannedclone"/>
				<remove_value name="$sectors"/>
				<remove_value name="$sector"/>
			</do_else>
			<!-- Exclude selected sectors. -->
			<do_if value="not ($excludedsectors == null)">
				<do_if value="$excludedsectors.count gt 0">
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Sector Restrictions detected!'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<create_list name="$buyspacesfiltered"/>
					<create_list name="$sellspacesfiltered"/>
					<do_all exact="$buyspaces.count" counter="$sector">
						<set_value name="$excluded" exact="false"/>
						<do_all exact="$excludedsectors.count" counter="$check">
							<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Excluded Sector: ('+$excludedsectors.{$check}.knownname+'),('+$excludedsectors.{$check}.cluster.knownname+') Table: '+$excludedsectors.{$check}.cluster+' BuySpace Cluster: ('+$buyspaces.{$sector}.knownname+') Table: '+$buyspaces.{$sector}" output="false" append="true" />-->
							<do_if value="$excludedsectors.{$check}.cluster == $buyspaces.{$sector}">
								<set_value name="$excluded" exact="true"/>
								<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Removing '+$buyspaces.{$sector}.knownname+' from BuySpaces'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							</do_if>
						</do_all>
						<do_if value="not $excluded">
							<append_to_list name="$buyspacesfiltered" exact="$buyspaces.{$sector}"/>
						</do_if>
					</do_all>
					<do_all exact="$sellspaces.count" counter="$sector">
						<set_value name="$excluded" exact="false"/>
						<do_all exact="$excludedsectors.count" counter="$check">
							<do_if value="$excludedsectors.{$check}.cluster == $sellspaces.{$sector}">
								<set_value name="$excluded" exact="true"/>
								<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Removing '+$sellspaces.{$sector}.knownname+' from SellSpaces'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							</do_if>
						</do_all>
						<do_if value="not $excluded">
							<append_to_list name="$sellspacesfiltered" exact="$sellspaces.{$sector}"/>
						</do_if>
					</do_all>
					<set_value name="$buyspaces" exact="$buyspacesfiltered"/>
					<set_value name="$sellspaces" exact="$sellspacesfiltered"/>
					<remove_value name="$buyspacesfiltered"/>
					<remove_value name="$sellspacesfiltered"/>
				</do_if>
			</do_if>
			<!-- Include selected sectors. -->
			<do_if value="not ($includedsectors == null)">
				<do_if value="$includedsectors.count gt 0">
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Adding WhiteListed Sectors to the sector list!'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<do_all exact="$includedsectors.count" counter="$sector">
						<set_value name="$buyspaced" exact="false"/>
						<do_all exact="$buyspaces.count" counter="$buy">
							<do_if value="$includedsectors.{$sector} == $buyspaces.{$buy}">
								<set_value name="$buyspaced" exact="true"/>
							</do_if>
						</do_all>
						<do_if value="not $buyspaced">
							<append_to_list name="$buyspaces" exact="$includedsectors.{$sector}"/>
						</do_if>
						<set_value name="$sellspaced" exact="false"/>
						<do_all exact="$sellspaces.count" counter="$sell">
							<do_if value="$includedsectors.{$sector} == $sellspaces.{$sell}">
								<set_value name="$sellspaced" exact="true"/>
							</do_if>
						</do_all>
						<do_if value="not $sellspaced">
							<append_to_list name="$sellspaces" exact="$includedsectors.{$sector}"/>
						</do_if>
					</do_all>
				</do_if>
			</do_if>
			<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Sectors in Range Buy: '+$buyspaces.count+' Sell: '+$sellspaces.count" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
			<!-- What wares do we currently have, lets try to sell them to the highest bidder. -->
			<set_value name="$Cargo" exact="this.ship.cargo.list"/>
			<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Scanning CargoBay: '+$Cargo.count" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
			<do_if value="$Cargo.count gt 0">
				<do_all exact="$Cargo.count" counter="$ware">
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'CargoBay Contains: '+$Cargo.{$ware}+' Amount: '+this.ship.cargo.{$Cargo.{$ware}}.count" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
				</do_all>
				<set_value name="$buyoffers" exact="[]"/>
				<do_all exact="$sellspaces.count" counter="$sector">
					<do_all exact="$Cargo.count" counter="$ware">
						<find_buy_offer tradepartner="this.ship" space="$sellspaces.{$sector}" result="$buyers" wares="$Cargo.{$ware}" multiple="true">
							<match_buyer>
								<match_relation_to object="this.ship" relation="dock" comparison="ge"/>
								<match tradesknownto="this.owner"/>
								<match_use_blacklist group="$blacklistgroup" type="blacklisttype.objectactivity" object="this.ship"/>
							</match_buyer>
						</find_buy_offer>
						<set_value name="$scantick" exact="$scantick+1"/>
						<do_if value="$scantick gt $scantickrate">
							<set_value name="$scantick" exact="0"/>
							<wait exact="1ms"/>
						</do_if>
						<do_all exact="$buyers.count" counter="$buy">
							<append_to_list name="$buyoffers" exact="$buyers.{$buy}"/>
						</do_all>
					</do_all>
				</do_all>
				<do_if value="$buyoffers.count gt 0">
					<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Buy Offers found: '+$buyoffers.count" output="false" append="true" /> -->
					<set_value name="$Grofit" exact="0"/>
					<set_value name="$GrofitFound" exact="false"/>
					<do_all exact="$buyoffers.count" counter="$buy">
						<set_value name="$buyoffer" exact="$buyoffers.{$buy}"/>
						<set_value name="$checkdeal" exact="true"/>
						<!-- Big ugly piece of code to check for faction bans. -->
						<do_if value="$bannedfactions.count gt 0">
							<do_all exact="$bannedfactions.count" counter="$fax">
								<do_if value="$buyoffer.buyer.owner == $bannedfactions.{$fax}">
									<set_value name="$checkdeal" exact="false"/>
								</do_if>
							</do_all>
						</do_if>
						<!-- Deal Is no longer available. -->
						<do_if value="not $buyoffer.available">
							<set_value name="$checkdeal" exact="false"/>
						</do_if>
						<!-- Dumb blackmarket dealers keep breaking things. -->
						<do_if value="not ($buyoffer.stocklevel gt 0)">
							<set_value name="$checkdeal" exact="false"/>
							<!--If they have a stock of 0, assume the deal is broken and skip it -->
						</do_if>
						<do_if value="$checkdeal">
							<set_value name="$buycost" exact="$buyoffer.unitprice/100"/>
							<do_if value="$buyoffer.buyer.owner == faction.player">
								<set_value name="$buycost" exact="$buyoffer.ware.averageprice/100*$discount2/100"/>
							</do_if>
							<set_value name="$Amount" exact="[this.ship.cargo.{$buyoffer.ware}.count,$buyoffer.amount].min"/>
							<set_value name="$distancescale" exact="1"/>
							<set_value name="$distance" exact="this.ship.gatedistance.{$buyoffer.buyer}.{$blacklistgroup}.{this.assignedcontrolled}"/>
							<do_if value="$distancecheck">
								<do_if value="$distance ge 0">
									<!--bad formula 1-($distance*($distancecheckpercent / 100))f -->
									<set_value name="$distancescale" exact="(1.0-$distancecheckpercent/100.0) ^ $distance"/>
								</do_if>
								<!-- Distance is -1 if there is no safe route -->
								<do_else>
									<set_value name="$distancescale" exact="0"/>
								</do_else>
							</do_if>
							<set_value name="$totalearned" exact="$distancescale*($Amount)f*($buycost)f"/>
							<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Buy Offer for: '+$buyoffer.ware+' at '+$buyoffer.buyer.knownname+' Amount: '+$Amount+' DesiredAmount: '+$buyoffer.desiredamount+' OfferAmount: '+$buyoffer.offeramount+' Stock: '+$buyoffer.stocklevel+' Profit: '+ $Amount*$buycost+' Payout: '+$buycost+' Distance: '+$distance+' DistanceScale: '+$distancescale+' Scaled: '+$totalearned+' HighestGrofit: '+$Grofit+' Available: '+$buyoffer.available+' Restricted: '+$buyoffer.restriction.factions.count+' MinAmount: '+$buyoffer.minamount+' IsMission: '+$buyoffer.ismission+' IsExchange: '+$buyoffer.iswareexchange+' FreeSpace: '+$buyoffer.buyer.cargo.{$buyoffer.ware}.free+' CommandersMoney: '+$buyoffer.buyer.money+' Exists: '+$buyoffer.exists+' Ware Illegal: '+$buyoffer.ware.illegalto.{$buyoffer.buyer.owner}.{null}" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<do_if value="$totalearned gt $Grofit">
								<!-- is it a better deal then the last check? -->
								<set_value name="$Grofit" exact="$totalearned"/>
								<set_value name="$GrofferBuy" exact="$buyoffer"/>
								<set_value name="$Gromount" exact="$Amount"/>
								<set_value name="$GrofitFound" exact="true"/>
							</do_if>
						</do_if>
						<set_value name="$scantick" exact="$scantick+1"/>
						<do_if value="$scantick gt $scantickrate">
							<set_value name="$scantick" exact="0"/>
							<wait exact="1ms"/>
						</do_if>
					</do_all>
					<do_if value="$GrofitFound">
						<do_if value="$GrofferBuy">
							<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Selling '+$Gromount+' '+$GrofferBuy.ware+' for '+$GrofferBuy.unitprice/100+' at '+$GrofferBuy.buyer.knownname+' DealAvailiability: '+$GrofferBuy.available" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="$Gromount*$GrofferBuy.unitprice" text="{3282837,201}.[$Gromount,$GrofferBuy.ware,$GrofferBuy.unitprice/100,$Gromount*$GrofferBuy.unitprice/100]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
							<create_trade_order name="$GrofferBuy" object="this.object" tradeoffer="$GrofferBuy" amount="$Gromount" immediate="false"/>
							<resume label="afterdealsetup"/>
							<!-- Why does this trade offer have to be be so hard to setup -->
						</do_if>
					</do_if>
				</do_if>
				<remove_value name="$buyoffers"/>
			</do_if>
			<!-- Now that we got rid of our cargo clutter lets start trading. -->
			<do_if value="($stationmode or $blackmarket) and $home.isclass.container">
				<!-- Have the station smuggler toggle also enable trader mode. -->
				<!-- Station Trader mode -->
				<!-- What is the station selling, if the stock gets too high we try to sell it. -->
				<find_sell_offer seller="$home" result="$stationselloffers" multiple="true">
				</find_sell_offer>
				<!-- What is the station buying, we use this to figure out what the station needs. -->
				<find_buy_offer buyer="$home" result="$stationbuyoffers" multiple="true">
				</find_buy_offer>
				<!-- Lets add the build storage's offers to the list -->
				<do_if value="not ($home.buildstorage == null)">
					<find_buy_offer buyer="$home.buildstorage" result="$storagebuyoffers" multiple="true">
					</find_buy_offer>
					<do_all exact="$storagebuyoffers.count" counter="$buy">
						<append_to_list name="$stationbuyoffers" exact="$storagebuyoffers.{$buy}"/>
					</do_all>
				</do_if>
				<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Station has: '+$stationselloffers.count+' sell offers and '+$stationbuyoffers.count+' buy offers.'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
				<set_value name="$prioritytype" exact="0"/>
				<set_value name="$StationTrade" exact="false"/>
				<set_value name="$Grofitfound" exact="false"/>
				<set_value name="$stockratio" exact="30"/>
				<set_value name="$highestpriority" exact="0"/>
				<set_value name="$GrofferBuy" exact="0"/>
				<set_value name="$GrofferSell" exact="0"/>
				<do_if value="$stationselloffers.count gt 0">
					<do_all exact="$stationselloffers.count" counter="$offer">
						<set_value name="$stationselloffer" exact="$stationselloffers.{$offer}"/>
						<set_value name="$offerpriority" exact="$stationselloffer.stocklevel*100"/>
						<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Sell Offer: '+$stationselloffer.ware+' Price: '+$stationselloffer.unitprice/100+' SellFree: '+$stationselloffer.sellfree.{this.ship}+' Stock: '+$stationselloffer.stocklevel*100+'% Priority: '+$offerpriority" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
						<!-- Maybe Scale priority based on what exactly the ware is -->
						<!-- TODO: Add a setting to allow players to customise the stock level requirements for trading. -->
						<do_if value="$offerpriority gt $stockratio">
							<!-- Scan for routes we can run, then save them -->
							<set_value name="$foundbuyers" exact="[]"/>
							<do_all exact="$sellspaces.count" counter="$sector">
								<do_if value="($stationselloffer.restriction.factions.count != 0 and $stationselloffer.restriction.factions != null)">
									<find_buy_offer tradepartner="this.ship" space="$sellspaces.{$sector}" result="$buyers" wares="$stationselloffer.ware" multiple="true">
										<match_buyer owner="$stationselloffer.restriction.factions" negateownerfilter="$stationselloffer.restriction.inverted" tradesknownto="this.owner">
											<match_relation_to object="this.ship" relation="dock" comparison="ge"/>
										</match_buyer>
									</find_buy_offer>
								</do_if>
								<do_else>
									<find_buy_offer tradepartner="this.ship" space="$sellspaces.{$sector}" result="$buyers" wares="$stationselloffer.ware" multiple="true">
										<match_buyer tradesknownto="this.owner">
											<match_relation_to object="this.ship" relation="dock" comparison="ge"/>
										</match_buyer>
									</find_buy_offer>
								</do_else>
								<set_value name="$scantick" exact="$scantick+1"/>
								<do_if value="$scantick gt $scantickrate">
									<set_value name="$scantick" exact="0"/>
									<wait exact="1ms"/>
								</do_if>
								<do_all exact="$buyers.count" counter="$buy">
									<append_to_list name="$foundbuyers" exact="$buyers.{$buy}"/>
								</do_all>
							</do_all>
							<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="' Scanning for buy offers! Found: '+$foundbuyers.count" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<set_value name="$bestdeal" exact="0"/>
							<set_value name="$bestprice" exact="0"/>
							<set_value name="$bestamount" exact="0"/>
							<do_all exact="$foundbuyers.count" counter="$buy">
								<set_value name="$foundbuyoffer" exact="$foundbuyers.{$buy}"/>
								<set_value name="$wareprice" exact="$foundbuyoffer.unitprice/100"/>
								<do_if value="$foundbuyoffer.buyer.owner == this.ship.owner">
									<set_value name="$wareprice" exact="$foundbuyoffer.unitprice/100*$discount2/100"/>
								</do_if>
								<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'   Scanning buy offer for ('+$foundbuyoffer.ware+') at ('+$foundbuyoffer.buyer.knownname+') Price: '+$wareprice+' Amount: '+$foundbuyoffer.amount+' Faction: '+$foundbuyoffer.buyer.owner+' Restriction: '+$foundbuyoffer.restriction.factions.count+' Raw OfferPrice: '+$foundbuyoffer.unitprice/100+' Relation: '+$foundbuyoffer.buyer.relationto.{this.ship.owner}+' Gate Distance: '+$home.gatedistance.{$foundbuyoffer.buyer}.{$blacklistgroup}.{this.assignedcontrolled}+' Distance Raw: '+$home.distanceto.{$foundbuyoffer.buyer}" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
								<do_if value="$wareprice gt $stationselloffer.unitprice/100">
									<!-- Only consider the trade if they are paying more then the station is selling, we arnt a charity here. -->
									<do_if value="$wareprice gt $bestprice">
										<!-- Is it better then the previus best deal? -->
										<set_value name="$checkdeal" exact="true"/>
										<do_if value="$foundbuyoffer.buyer == $stationselloffer.seller">
											<!-- Prevent the station from selling to itself, dang traders. -->
											<set_value name="$checkdeal" exact="false"/>
										</do_if>
										<!-- Big ugly piece of code to check for faction bans. -->
										<do_if value="$bannedfactions.count gt 0">
											<do_all exact="$bannedfactions.count" counter="$fac">
												<do_if value="$foundbuyoffer.buyer.owner == $bannedfactions.{$fac}">
													<set_value name="$checkdeal" exact="false"/>
												</do_if>
											</do_all>
										</do_if>
										<do_if value="$foundbuyoffer.ware.illegalto.{$foundbuyoffer.buyer.owner}.{this.ship.owner}">
											<do_if value="not $blackmarket">
												<!-- Dont trade illegal wares automatically, player has to toggle that. -->
												<set_value name="$checkdeal" exact="false"/>
											</do_if>
											<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Ware: '+$stationbuyoffer.ware+' is illegal to '+$stationbuyoffer.buyer.owner+' Adjusting Priority to '+$offerpriority" output="false" append="true" /> -->
										</do_if>
										<do_if value="$checkdeal">
											<set_value name="$spendablemoney" exact="player.money/100"/>
											<do_if value="this.ship.commander">
												<!-- Code from AqlaSolutions(this.ship.commander.hasownaccount) and (this.ship.commander.defaultorder == null or this.ship.commander.defaultorder.id != 'TaterTrade') and (this.ship.commander.money gt 0)-->
												<!-- For proper compatability with commanders that arnt stations. Trade ships have their own account during a trade run. We also need to make sure to use player money for civilian fleets -->
												<do_if value="(this.ship.commander.hasownaccount) and (this.ship.commander.defaultorder == null or this.ship.commander.defaultorder.id != 'TaterTrade') and (this.ship.commander.money gt 0)">
													<set_value name="$spendablemoney" exact="this.ship.commander.money/100"/>
												</do_if>
											</do_if>
											<do_if value="$stationselloffer.unitprice/100 gt 0">
												<set_value name="$Amount" exact="[this.ship.cargo.{$foundbuyoffer.ware}.free,$foundbuyoffer.amount,$stationselloffer.amount,$spendablemoney/(2*$stationselloffer.unitprice/100)].min"/>
											</do_if>
											<do_else>
												<set_value name="$Amount" exact="[this.ship.cargo.{$foundbuyoffer.ware}.free,$foundbuyoffer.amount,$stationselloffer.amount].min"/>
											</do_else>
											<set_value name="$bestamount" exact="$Amount"/>
											<set_value name="$bestdeal" exact="$foundbuyers.{$buy}"/>
											<set_value name="$bestprice" exact="$wareprice"/>
										</do_if>
									</do_if>
								</do_if>
								<!-- process multiple deals at once, to speed things up -->
								<set_value name="$scantick" exact="$scantick+1"/>
								<do_if value="$scantick gt $scantickrate">
									<set_value name="$scantick" exact="0"/>
									<wait exact="1ms"/>
								</do_if>
							</do_all>
							<do_if value="not ($bestdeal == 0)">
								<set_value name="$profit" exact="$bestdeal.unitprice/100-$stationselloffer.unitprice/100"/>
								<!--<set_value name="$profit" exact="$profit*$bestamount" /> -->
								<!-- This was causing the traders to REALLY want to sell stuff -->
								<set_value name="$offerpriority" exact="$offerpriority+($profit)f"/>
								<!-- Dang traders, too focused on profit.... Have to tweak this number far down. -->
								<set_value name="$WareCapacity" exact="this.ship.cargo.{$bestdeal.ware}.free"/>
								<set_value name="$offerpriority" exact="$offerpriority+($bestamount/$WareCapacity)*25"/>
								<do_if value="$distancecheck">
									<set_value name="$distance" exact="$home.gatedistance.{$bestdeal.buyer}.{$blacklistgroup}.{this.assignedcontrolled}"/>
									<!-- Distance is -1 if there is no safe route -->
									<do_if value="$distance ge 0">
										<set_value name="$offerpriority" exact="$offerpriority * ((1.0-$distancecheckpercent/100.0) ^ $distance)"/>
									</do_if>
									<!-- Distance is -1 if there is no safe route -->
									<do_else>
										<set_value name="$offerpriority" exact="$offerpriority * 0"/>
									</do_else>
								</do_if>
								<do_if value="$offerpriority gt $highestpriority">
									<set_value name="$highestpriority" exact="$offerpriority"/>
									<set_value name="$GrofferBuy" exact="$bestdeal"/>
									<set_value name="$GrofferSell" exact="$stationselloffer"/>
									<set_value name="$StationTrade" exact="true"/>
									<set_value name="$Gromount" exact="$bestamount"/>
									<set_value name="$itemcostsell" exact="$stationselloffer.unitprice/100"/>
									<set_value name="$itemcostbuy" exact="$bestdeal.unitprice/100"/>
								</do_if>
								<!-- Assign a priority based on the profit gained from the trade. -->
								<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Selling: ('+$stationselloffer.ware+') Best Deal: ('+$bestdeal.buyer.knownname+') Price: '+$bestdeal.unitprice/100+' Profit: '+$profit+' Amount: ( '+$bestamount+' / '+$WareCapacity+' Max) Priority: '+$offerpriority+' GateDistance: '+$home.gatedistance.{$bestdeal.buyer}.{$blacklistgroup}.{this.assignedcontrolled}+' StockLevel: '+$stationselloffer.stocklevel*100+'% CargoFill: '+(($bestamount)f/($WareCapacity)f)*100+'%'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							</do_if>
						</do_if>
					</do_all>
				</do_if>
				<!-- Appears the station wants to buy something, lets see what it wants. -->
				<do_if value="$stationbuyoffers.count gt 0">
					<do_all exact="$stationbuyoffers.count" counter="$offer">
						<set_value name="$stationbuyoffer" exact="$stationbuyoffers.{$offer}"/>
						<set_value name="$isbuildstorage" exact="$stationbuyoffer.buyer == $home.buildstorage"/>
						<set_value name="$offerpriority" exact="$stationbuyoffer.stocklevel"/>
						<!-- I was inverting this, but the game already adjusts to whats needed. Not what is currently held. -->
						<set_value name="$offerpriority" exact="$offerpriority*100"/>
						<do_if value="$stationbuyoffer.ware.illegalto.{$stationbuyoffer.buyer.owner}.{this.ship.owner}">
							<do_if value="not $blackmarket">
								<!-- Dont trade illegal wares automatically, player has to toggle that. -->
								<set_value name="$offerpriority" exact="0"/>
							</do_if>
							<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Ware: '+$stationbuyoffer.ware+' is illegal to '+$stationbuyoffer.buyer.owner+' Adjusting Priority to '+$offerpriority" output="false" append="true" /> -->
						</do_if>
						<do_if value="$stationbuyoffer.owner == this.ship.owner">
							<do_if value="$isbuildstorage">
								<!-- If the player owns the build storage, prioritise it. Maybe add a toggle for this, incase people dont want to focus building-->
								<set_value name="$offerpriority" exact="$offerpriority*1.2"/>
							</do_if>
						</do_if>
						<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'BuyerName: ('+$stationbuyoffer.buyer.knownname+') Is Build Storage: '+$isbuildstorage+' Ware: '+$stationbuyoffer.ware+' Price: '+$stationbuyoffer.unitprice/100+' BuyFree: '+$stationbuyoffer.buyfree.{this.ship}+' Stock: '+$stationbuyoffer.stocklevel*100+'% Desired Amount: '+$stationbuyoffer.desiredamount+' Priority: '+$offerpriority" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
						<do_if value="$offerpriority gt $stockratio">
							<set_value name="$foundseller" exact="[]"/>
							<do_all exact="$buyspaces.count" counter="$sector">
								<do_if value="($stationbuyoffer.restriction.factions.count != 0 and $stationbuyoffer.restriction.factions != null)">
									<find_sell_offer tradepartner="this.ship" space="$buyspaces.{$sector}" result="$sellers" multiple="true" wares="$stationbuyoffer.ware">
										<match_seller owner="$stationbuyoffer.restriction.factions" negateownerfilter="$stationbuyoffer.restriction.inverted" tradesknownto="this.owner">
											<match_relation_to object="this.ship" relation="dock" comparison="ge"/>
											<match_use_blacklist group="$blacklistgroup" type="blacklisttype.objectactivity" object="this.ship"/>
										</match_seller>
									</find_sell_offer>
								</do_if>
								<do_else>
									<find_sell_offer tradepartner="this.ship" space="$buyspaces.{$sector}" result="$sellers" multiple="true" wares="$stationbuyoffer.ware">
										<match_seller tradesknownto="this.owner">
											<match_relation_to object="this.ship" relation="dock" comparison="ge"/>
											<match_use_blacklist group="$blacklistgroup" type="blacklisttype.objectactivity" object="this.ship"/>
										</match_seller>
									</find_sell_offer>
								</do_else>
								<set_value name="$scantick" exact="$scantick+1"/>
								<do_if value="$scantick gt $scantickrate">
									<set_value name="$scantick" exact="0"/>
									<wait exact="1ms"/>
								</do_if>
								<do_all exact="$sellers.count" counter="$sell">
									<append_to_list name="$foundseller" exact="$sellers.{$sell}"/>
								</do_all>
							</do_all>
							<set_value name="$bestdeal" exact="0"/>
							<set_value name="$bestprice" exact="$stationbuyoffer.unitprice"/>
							<set_value name="$bestamount" exact="0"/>
							<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'I found '+$foundseller.count+' sell offers for '+$stationbuyoffer.ware" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<do_all exact="$foundseller.count" counter="$sell">
								<set_value name="$foundselloffer" exact="$foundseller.{$sell}"/>
								<set_value name="$checkdeal" exact="true"/>
								<do_if value="$foundselloffer.seller == $stationbuyoffer.seller">
									<!-- Prevent the station from selling to itself, dang traders. -->
									<set_value name="$checkdeal" exact="false"/>
									<!-- TODO: Check if this prevents a station from supplying its own build storage, It shouldnt though as the storage is a seperate buyer object -->
								</do_if>
								<!-- Big ugly piece of code to check for faction bans. -->
								<do_if value="$bannedfactions.count gt 0">
									<do_all exact="$bannedfactions.count" counter="$facts">
										<do_if value="$foundselloffer.seller.owner == $bannedfactions.{$facts}">
											<set_value name="$checkdeal" exact="false"/>
										</do_if>
									</do_all>
								</do_if>
								<do_if value="$checkdeal">
									<set_value name="$wareprice" exact="$foundselloffer.unitprice / 100.0"/>
									<do_if value="$foundselloffer.seller.owner == this.ship.owner">
										<set_value name="$wareprice" exact="($foundselloffer.unitprice / 100.0) * ($discount / 100.0)"/>
									</do_if>
									<set_value name="$spendablemoney" exact="player.money/100"/>
									<do_if value="this.ship.commander">
										<!-- Code from AqlaSolutions(this.ship.commander.hasownaccount) and (this.ship.commander.defaultorder == null or this.ship.commander.defaultorder.id != 'TaterTrade') and (this.ship.commander.money gt 0)-->
										<!-- For proper compatability with commanders that arnt stations. Trade ships have their own account during a trade run. We also need to make sure to use player money for civilian fleets -->
										<do_if value="(this.ship.commander.hasownaccount) and (this.ship.commander.defaultorder == null or this.ship.commander.defaultorder.id != 'TaterTrade') and (this.ship.commander.money gt 0)">
											<set_value name="$spendablemoney" exact="this.ship.commander.money/100"/>
										</do_if>
									</do_if>
									<do_if value="$wareprice gt 0">
										<set_value name="$Amount" exact="[this.ship.cargo.{$stationbuyoffer.ware}.free,$stationbuyoffer.amount,$foundselloffer.amount,$spendablemoney/(2*$wareprice)].min"/>
									</do_if>
									<do_else>
										<set_value name="$Amount" exact="[this.ship.cargo.{$stationbuyoffer.ware}.free,$stationbuyoffer.amount,$foundselloffer.amount].min"/>
									</do_else>
									<!--<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'SpaceLeft: '+this.ship.cargo.{$stationbuyoffer.ware}.free+' BuyAmount: '+$stationbuyoffer.amount+' SellAmount: '+$foundselloffer.amount+' AmountAfforded: '+$spendablemoney/(2*$wareprice)" output="false" append="true" /> -->
									<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'   Scanning sell offer for ( '+$Amount+' '+$stationbuyoffer.ware+' ) at ('+$foundselloffer.seller.knownname+') Price: '+$wareprice+' Faction: '+$foundselloffer.seller.owner+' Restriction: '+$foundselloffer.restriction.factions.count+' Raw OfferPrice: '+$foundselloffer.unitprice/100+' BuyAmount: '+$stationbuyoffer.amount+' SellAmount: '+$foundselloffer.amount" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
									<do_if value="$wareprice lt ($stationbuyoffer.unitprice / 100.0)">
										<!-- Is the station selling it cheaper then we are asking? -->
										<do_if value="($wareprice lt $bestprice) or ($Amount gt $bestamount)">
											<!-- Is it better then the previus best deal? -->
											<set_value name="$bestdeal" exact="$foundseller.{$sell}"/>
											<set_value name="$bestprice" exact="$wareprice"/>
											<set_value name="$bestamount" exact="$Amount"/>
										</do_if>
									</do_if>
								</do_if>
								<!-- process multiple deals at once, to speed things up -->
								<set_value name="$scantick" exact="$scantick+1"/>
								<do_if value="$scantick gt $scantickrate">
									<set_value name="$scantick" exact="0"/>
									<wait exact="1ms"/>
								</do_if>
							</do_all>
							<do_if value="not ($bestdeal == 0)">
								<set_value name="$WareCapacity" exact="this.ship.cargo.{$bestdeal.ware}.free"/>
								<set_value name="$offerpriority" exact="($bestamount / $WareCapacity) * 25.0" operation="add"/>
								<set_value name="$costdiff" exact="($stationbuyoffer.unitprice / 100.0) - $bestprice"/>
								<set_value name="$offerpriority" exact="($costdiff)f / 2.0" operation="add"/>
								<do_if value="$distancecheck">
									<set_value name="$distance" exact="$home.gatedistance.{$bestdeal.seller}.{$blacklistgroup}.{this.assignedcontrolled}"/>
									<!-- Distance is -1 if there is no safe route -->
									<do_if value="$distance ge 0">
										<set_value name="$offerpriority" exact="$offerpriority * ((1.0-$distancecheckpercent/100.0) ^ $distance)"/>
									</do_if>
									<!-- Distance is -1 if there is no safe route -->
									<do_else>
										<set_value name="$offerpriority" exact="$offerpriority * 0"/>
									</do_else>
								</do_if>
								<do_if value="$offerpriority gt $highestpriority">
									<do_if value="$bestamount gt 0">
										<!-- Stop sending trade orders with 0 amount. -->
										<set_value name="$highestpriority" exact="$offerpriority"/>
										<set_value name="$GrofferBuy" exact="$stationbuyoffer"/>
										<set_value name="$GrofferSell" exact="$bestdeal"/>
										<set_value name="$StationTrade" exact="true"/>
										<set_value name="$Gromount" exact="$bestamount"/>
										<set_value name="$itemcostsell" exact="$bestprice"/>
										<set_value name="$itemcostbuy" exact="$stationbuyoffer.unitprice / 100.0"/>
									</do_if>
								</do_if>
								<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Buying: ('+$stationbuyoffer.ware+') Best Deal: ('+$bestdeal.seller.knownname+') Price: '+$bestprice+' Amount: ( '+$bestamount+' / '+$WareCapacity+' Max) Priority: '+$offerpriority+' GateDistance: '+$home.gatedistance.{$bestdeal.seller}.{$blacklistgroup}.{this.assignedcontrolled}+' StockLevel: '+$stationbuyoffer.stocklevel*100+'% CargoFill: '+(($bestamount)f/($WareCapacity)f)*100+'%'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							</do_if>
						</do_if>
					</do_all>
				</do_if>
				<do_if value="$StationTrade == true">
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Station Trader Trade found!'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<set_value name="$GrofitFound" exact="false"/>
					<resume label="setupdeals"/>
				</do_if>
				<remove_value name="$stationselloffers"/>
				<remove_value name="$stationbuyoffers"/>
				<!-- TODO: Decide if station mode should disable free trade or not. -->
				<!-- <resume label="start" /> -->
			</do_if>
			<set_value name="$StationTrade" exact="false"/>
			<!-- Station Trade Mode code ending here. Moving to Free Trader Mode Below.
          ================================================================================================
          ================================================================================================
          ================================================================================================
      -->
			<do_if value="(not (@$usedwarebasket.count gt 0)) or (not $usedwarebasket?)">
				<do_if value="(not $warebasketerror?) or (@$warebasketerror == false)">
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'\nNo Wares Detected! Resetting to start! Log File Version: 10'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<set_value name="$warebasketerror" exact="true"/>
					<wait exact="2s"/>
					<resume label="start"/>
				</do_if>
				<do_elseif value="@$warebasketerror == true">
					<resume label="afterdealsetup"/>
				</do_elseif>
			</do_if>
			<do_else>
				<set_value name="$warebasketerror" exact="false"/>
			</do_else>
			<!-- Free Trader mode -->
			<!-- Find trade deals we can run. -->
			<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Searching for trade deals'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
			<set_value name="$Grofit" exact="100"/>
			<set_value name="$GrofitFound" exact="false"/>
			<!-- skill based wait for free traders -->
			<wait min="[5s - (this.ship.pilot.skill.management / 3)s,1s].max" max="[10s - (this.ship.pilot.skill.management * 2 / 3)s,2s].max" sinceversion="8"/>
			<do_all exact="$usedwarebasket.count" counter="$ware">
				<!-- First grab the offers for the ware from all the sectors in range.. -->
				<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Checking offers for ware: '+$usedwarebasket.{$ware}" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
				<create_list name="$buyoffers"/>
				<do_all exact="$sellspaces.count" counter="$sector">
					<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Scanning Sector for buy offers: '+$sellspaces.{$sector}" output="false" append="true" /> -->
					<find_buy_offer tradepartner="this.ship" space="$sellspaces.{$sector}" result="$buyers" multiple="true" wares="$usedwarebasket.{$ware}">
						<match_buyer>
							<match_relation_to object="this.ship" relation="dock" comparison="ge"/>
							<match tradesknownto="this.owner"/>
							<match_use_blacklist group="$blacklistgroup" type="blacklisttype.objectactivity" object="this.ship"/>
						</match_buyer>
					</find_buy_offer>
					<set_value name="$scantick" exact="$scantick+1"/>
					<do_if value="$scantick gt $scantickrate">
						<set_value name="$scantick" exact="0"/>
						<wait exact="1ms"/>
					</do_if>
					<do_all exact="$buyers.count" counter="$buy">
						<append_to_list name="$buyoffers" exact="$buyers.{$buy}"/>
					</do_all>
				</do_all>
				<create_list name="$selloffers"/>
				<do_all exact="$buyspaces.count" counter="$sector">
					<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Scanning Sector for sell offers: '+$buyspaces.{$sector}" output="false" append="true" /> -->
					<find_sell_offer tradepartner="this.ship" space="$buyspaces.{$sector}" result="$sellers" multiple="true" wares="$usedwarebasket.{$ware}">
						<match_seller>
							<match_relation_to object="this.ship" relation="dock" comparison="ge"/>
							<match tradesknownto="this.owner"/>
							<match_use_blacklist group="$blacklistgroup" type="blacklisttype.objectactivity" object="this.ship"/>
						</match_seller>
					</find_sell_offer>
					<set_value name="$scantick" exact="$scantick+1"/>
					<do_if value="$scantick gt $scantickrate">
						<set_value name="$scantick" exact="0"/>
						<wait exact="1ms"/>
					</do_if>
					<do_all exact="$sellers.count" counter="$sell">
						<append_to_list name="$selloffers" exact="$sellers.{$sell}"/>
					</do_all>
				</do_all>
				<!-- Clear out the best sell variable if it has something in it. -->
				<set_value name="$bestrating" exact="0"/>
				<set_value name="$bestsell" exact="0"/>
				<!-- Are there any possible deals withen our search area? -->
				<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'I found these offers nearby, Buy: '+$buyoffers.count+' Sell: '+$selloffers.count" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
				<do_if value="$buyoffers.count and $selloffers.count">
					<!-- Now we compare the offers and try to get a decent deal -->
					<shuffle_list list="$buyoffers"/>
					<sort_trades name="$buyoffers" tradelist="$buyoffers" sorter="relativeprice"/>
					<!-- highest relative price to lowest -->
					<set_value name="$buyofferscount" exact="$buyoffers.count"/>
					<!-- lets be lazy and only check the best 1/3rd of offers -->
					<do_if value="$buyofferscount gt 10">
						<set_value name="$buyofferscount" exact="$buyofferscount / 3"/>
					</do_if>
					<do_all exact="$buyofferscount" counter="$buy" reverse="true">
						<set_value name="$buyoffer" exact="$buyoffers.{$buy}"/>
						<set_value name="$tradebanned" exact="false"/>
						<!--<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Banned Faction Count: '+$bannedfactions.count" output="false" append="true" /> -->
						<do_if value="$bannedfactions.count gt 0 and $buyoffer.available">
							<do_all exact="$bannedfactions.count" counter="$fab">
								<!--<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Comparing against faction: '+$bannedfactions.{$fact}" output="false" append="true" /> -->
								<do_if value="$buyoffer.buyer.owner == $bannedfactions.{$fab}">
									<set_value name="$tradebanned" exact="true"/>
								</do_if>
							</do_all>
							<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Faction: '+$buyoffer.buyer.owner+' Trade Banned: '+$tradebanned" output="false" append="true" /> -->
						</do_if>
						<do_if value="$buyoffer.available and not $tradebanned">
							<set_value name="$buycost" exact="$buyoffer.unitprice/100"/>
							<do_if value="($buycost == 0) or ($buyoffer.buyer.owner == this.ship.owner)">
								<set_value name="$buycost" exact="$buyoffer.unitprice/100*$discount2/100"/>
								<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'This buyer has the same owner as us, or the buy price is '+$buycost" output="false" append="true" />  -->
							</do_if>
							<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="' Scanning buy offer for ('+$buyoffer.ware+') at ('+$buyoffer.buyer.knownname+') Price: '+$buycost+' Faction: '+$buyoffer.buyer.owner+' Restriction: '+$buyoffer.restriction.factions.count+' Raw OfferPrice: '+$buyoffer.unitprice/100+' Relation: '+$buyoffer.buyer.relationto.{this.ship.owner}+' Gate Distance: '+this.ship.gatedistance.{$buyoffer.buyer}.{$blacklistgroup}.{this.assignedcontrolled}+' Distance Raw: '+this.ship.distanceto.{$buyoffer.buyer}" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
							<!-- If fast trade is enabled, and we already scanned for the best sell offer -->
							<do_if value="not $fasttrade or $bestsell == 0">
								<sort_trades name="$selloffers" tradelist="$selloffers" sorter="relativeprice"/>
								<!-- lowest relative price to highest -->
								<set_value name="$sellofferscount" exact="$selloffers.count"/>
								<!-- lets be lazy and only check the best 1/3rd of offers -->
								<do_if value="$sellofferscount gt 10">
									<set_value name="$sellofferscount" exact="$sellofferscount / 3"/>
								</do_if>
								<do_all exact="$sellofferscount" counter="$sell" reverse="false">
									<set_value name="$selloffer" exact="$selloffers.{$sell}"/>
									<set_value name="$tradebanned" exact="false"/>
									<!-- Big ugly piece of code to check for faction bans. -->
									<do_if value="$bannedfactions.count gt 0">
										<do_all exact="$bannedfactions.count" counter="$fact">
											<do_if value="$selloffer.seller.owner == $bannedfactions.{$fact}">
												<set_value name="$tradebanned" exact="true"/>
											</do_if>
										</do_all>
										<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Faction: '+$selloffer.seller.owner+' Trade Banned: '+$tradebanned" output="false" append="true" /> -->
									</do_if>
									<do_if value="$selloffer.available and not $tradebanned">
										<set_value name="$sellcost" exact="$selloffer.unitprice/100"/>
										<do_if value="$selloffer.seller.owner == this.ship.owner">
											<set_value name="$sellcost" exact="$selloffer.unitprice/100*$discount/100"/>
											<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Raw Avg: '+$selloffer.ware.averageprice/100+' Discount: '+$discount/100+' equals '+$sellcost" output="false" append="true" /> -->
										</do_if>
										<set_value name="$spendablemoney" exact="player.money/100"/>
										<do_if value="this.ship.commander">
											<!-- Code from AqlaSolutions(this.ship.commander.hasownaccount) and (this.ship.commander.defaultorder == null or this.ship.commander.defaultorder.id != 'TaterTrade') and (this.ship.commander.money gt 0)-->
											<!-- For proper compatability with commanders that arnt stations. Trade ships have their own account during a trade run. We also need to make sure to use player money for civilian fleets -->
											<do_if value="(this.ship.commander.hasownaccount) and (this.ship.commander.defaultorder == null or this.ship.commander.defaultorder.id != 'TaterTrade') and (this.ship.commander.money gt 0)">
												<set_value name="$spendablemoney" exact="this.ship.commander.money/100"/>
											</do_if>
										</do_if>
										<do_if value="$sellcost gt 0">
											<set_value name="$Amount" exact="[this.ship.cargo.{$buyoffer.ware}.free,$buyoffer.amount,$selloffer.amount,$spendablemoney/(2*$sellcost)].min"/>
											<set_value name="$Ratio" exact="$selloffer.ware.averageprice*100/$selloffer.unitprice"/>
											<!-- Lets attempt to make a value rating for each sell offer, so we can optimise the search. -->
											<set_value name="$Rating" exact="[this.ship.cargo.{$buyoffer.ware}.free,$selloffer.amount,$spendablemoney/(2*$sellcost)].min*$Ratio"/>
										</do_if>
										<do_else>
											<set_value name="$Amount" exact="[this.ship.cargo.{$buyoffer.ware}.free,$buyoffer.amount,$selloffer.amount].min"/>
											<set_value name="$Ratio" exact="$selloffer.ware.averageprice*100/$selloffer.unitprice"/>
											<set_value name="$Rating" exact="[this.ship.cargo.{$buyoffer.ware}.free,$selloffer.amount].min*$Ratio"/>
										</do_else>
										<set_value name="$CheckGrofit" exact="false"/>
										<do_if value="not $bypass and (($selloffer.seller.owner == this.ship.owner) or ($buyoffer.buyer.owner == this.ship.owner))">
											<!-- We're dealing with one of our owners stations, take special care here. -->
											<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Our owner ones one of these stations, additional checks are inplace.'" output="false" append="true" /> -->
											<!-- Try to allow trade between owned stations regardless of restriction. -->
											<!-- trade rules are absolutely annoying, notes from drhay -->
											<!-- if tradeoffer.restriction.inverted == 1, then the list returned by tradeoffer.restriction.factions is a blacklist. -->
											<!-- This corresponds to leaving "restrict all factions" blank in the trade rule UI -->
											<!-- if tradeoffer.restriction.inverted == 0, then the list returned by tradeoffer.restriction.factions is a whitelist. -->
											<!-- This corresponds to checking the box for "restrict all factions" in the trade rule UI -->
											<do_if value="($selloffer.restriction.factions.count != 0 and $selloffer.restriction.factions != null) or ($buyoffer.restriction.factions.count != 0 and $buyoffer.restriction.factions != null)">
												<do_if value="($selloffer.restriction.factions.count != 0 and $selloffer.restriction.factions != null)">
													<set_value name="$CheckGrofit" exact="true"/>
													<do_if value="$selloffer.restriction.inverted == 1">
														<do_if value="($selloffer.restriction.factions.indexof.{$buyoffer.buyer.owner} gt 0)">
															<set_value name="$CheckGrofit" exact="false"/>
														</do_if>
													</do_if>
													<do_elseif value="$selloffer.restriction.inverted == 0">
														<do_if value="($selloffer.restriction.factions.indexof.{$buyoffer.buyer.owner} lt 1)">
															<set_value name="$CheckGrofit" exact="false"/>
														</do_if>
													</do_elseif>
												</do_if>
												<do_if value="($buyoffer.restriction.factions.count != 0 and $buyoffer.restriction.factions != null)">
													<set_value name="$CheckGrofit" exact="true"/>
													<do_if value="$buyoffer.restriction.inverted == 1">
														<do_if value="($buyoffer.restriction.factions.indexof.{$selloffer.seller.owner} gt 0)">
															<set_value name="$CheckGrofit" exact="false"/>
														</do_if>
													</do_if>
													<do_elseif value="$buyoffer.restriction.inverted == 0">
														<do_if value="($buyoffer.restriction.factions.indexof.{$selloffer.seller.owner} lt 1)">
															<set_value name="$CheckGrofit" exact="false"/>
														</do_if>
													</do_elseif>
												</do_if>
											</do_if>
											<do_else>
												<set_value name="$CheckGrofit" exact="true"/>
											</do_else>
										</do_if>
										<do_else>
											<!-- We arnt trading with a station our owner owns, no restrictions go! (Or maybe they dont care and allowed free trading for this ship.) -->
											<set_value name="$CheckGrofit" exact="true"/>
										</do_else>
										<set_value name="$distancescale" exact="1"/>
										<do_if value="$distancecheck">
											<set_value name="$distance" exact="this.ship.gatedistance.{$selloffer.seller}.{$blacklistgroup}.{this.assignedcontrolled}"/>
											<!-- Distance is -1 if there is no safe route -->
											<do_if value="$distance ge 0">
												<set_value name="$Rating" exact="($Rating)f * ((1.0-$distancecheckpercent/100.0) ^ $distance)"/>
											</do_if>
											<!-- Distance is -1 if there is no safe route -->
											<do_else>
												<set_value name="$Rating" exact="($Rating)f * 0"/>
											</do_else>
											<set_value name="$distance" exact="$selloffer.seller.gatedistance.{$buyoffer.buyer}.{$blacklistgroup}.{this.assignedcontrolled}+this.ship.gatedistance.{$selloffer.seller}.{$blacklistgroup}.{this.assignedcontrolled}"/>
											<!-- Distance is -1 if there is no safe route -->
											<do_if value="$distance ge 0">
												<set_value name="$distancescale" exact="(1.0-$distancecheckpercent/100.0) ^ $distance"/>
											</do_if>
											<!-- Distance is -1 if there is no safe route -->
											<do_else>
												<set_value name="$distancescale" exact="0"/>
											</do_else>
										</do_if>
										<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'   Scanning sell offer for ('+$buyoffer.ware+') at ('+$selloffer.seller.knownname+') Faction: ('+$selloffer.seller.owner+') Restriction: ('+$selloffer.restriction.factions+') Buying at '+$buycost+' Selling at '+$sellcost+' Average: '+$buyoffer.ware.averageprice/100+' Amount: '+$Amount+' Grofit: '+ $Amount*($buycost-$sellcost)+' Ratio: '+$Ratio+' Rating: '+$Rating+' RawSellOffer Price: '+$selloffer.unitprice/100+' Relation: '+$selloffer.seller.relationto.{this.ship.owner}+' Gate Distance: '+$selloffer.seller.gatedistance.{$buyoffer.buyer}.{$blacklistgroup}.{this.assignedcontrolled}+' Distance Raw: '+$selloffer.seller.distanceto.{$buyoffer.buyer}+' Distance Scale: '+$distancescale" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
										<do_if value="$bestrating lt $Rating">
											<set_value name="$bestrating" exact="$Rating"/>
											<set_value name="$bestsell" exact="$selloffer"/>
										</do_if>
										<!-- TaterTrader, no your not allowed to buy and sell to the same station. -->
										<do_if value="$buyoffer.buyer == $selloffer.seller">
											<set_value name="$CheckGrofit" exact="false"/>
										</do_if>
										<do_if value="$CheckGrofit">
											<!-- Use a variable inplace of just copy pasting the section below. -->
											<do_if value="$Grofit lt $Amount*(($buycost - $sellcost)f * $distancescale)ct">
												<set_value name="$Grofit" exact="$Amount*($buycost-$sellcost)"/>
												<set_value name="$GrofferSell" exact="$selloffer"/>
												<set_value name="$GrofferBuy" exact="$buyoffer"/>
												<set_value name="$Gromount" exact="$Amount"/>
												<set_value name="$GrofitFound" exact="true"/>
												<set_value name="$itemcostsell" exact="$sellcost"/>
												<set_value name="$itemcostbuy" exact="$buycost"/>
											</do_if>
										</do_if>
									</do_if>
									<set_value name="$scantick" exact="$scantick+1"/>
									<do_if value="$scantick gt $scantickrate">
										<set_value name="$scantick" exact="0"/>
										<wait exact="1ms"/>
									</do_if>
								</do_all>
							</do_if>
							<do_else>
								<!-- Seems we were told to use the fast trade option. -->
								<do_if value="$buyoffer.available and $bestsell.available">
									<!-- Had to add a check, as some tradeships managed to cut others off ruining their scan data for the whole ware. -->
									<set_value name="$sellcost" exact="$bestsell.unitprice/100"/>
									<do_if value="$bestsell.seller.owner == this.ship.owner">
										<set_value name="$sellcost" exact="$bestsell.unitprice/100*$discount/100"/>
									</do_if>
									<do_if value="$sellcost gt 0">
										<set_value name="$Amount" exact="[this.ship.cargo.{$buyoffer.ware}.free,$buyoffer.amount,$selloffer.amount,$spendablemoney/(2*$sellcost)].min"/>
									</do_if>
									<do_else>
										<set_value name="$Amount" exact="[this.ship.cargo.{$buyoffer.ware}.free,$buyoffer.amount,$selloffer.amount].min"/>
									</do_else>
									<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'   Scanning sell offer for ('+$buyoffer.ware+') at ('+$bestsell.seller.knownname+') Faction: ('+$bestsell.seller.owner+') Restriction: ('+$bestsell.restriction.factions+') Buying at '+$buycost+' Selling at '+$sellcost+' Average: '+$buyoffer.ware.averageprice/100+' Amount: '+$Amount+' Grofit: '+ $Amount*($buycost-$sellcost)" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
									<do_if value="$Grofit lt $Amount*($buycost-$sellcost)">
										<set_value name="$Grofit" exact="$Amount*($buycost-$sellcost)"/>
										<set_value name="$GrofferSell" exact="$bestsell"/>
										<set_value name="$GrofferBuy" exact="$buyoffer"/>
										<set_value name="$Gromount" exact="$Amount"/>
										<set_value name="$GrofitFound" exact="true"/>
										<set_value name="$itemcostsell" exact="$sellcost"/>
										<set_value name="$itemcostbuy" exact="$buycost"/>
									</do_if>
									<set_value name="$scantick" exact="$scantick+1"/>
									<do_if value="$scantick gt $scantickrate">
										<set_value name="$scantick" exact="0"/>
										<wait exact="1ms"/>
									</do_if>
								</do_if>
								<do_else>
									<do_if value="not $bestsell.available">
										<!-- Make sure our sell offer is still valid. -->
										<set_value name="$bestsell" exact="0"/>
									</do_if>
								</do_else>
							</do_else>
						</do_if>
					</do_all>
				</do_if>
			</do_all>
			<label name="setupdeals"/>
			<do_if value="$GrofitFound == null">
				<set_value name="$GrofitFound" exact="false"/>
			</do_if>
			<do_if value="$GrofitFound or $StationTrade">
				<set_value name="$spendablemoney" exact="player.money/100"/>
				<do_if value="this.ship.commander">
					<!-- Code from AqlaSolutions(this.ship.commander.hasownaccount) and (this.ship.commander.defaultorder == null or this.ship.commander.defaultorder.id != 'TaterTrade') and (this.ship.commander.money gt 0)-->
					<!-- For proper compatability with commanders that arnt stations. Trade ships have their own account during a trade run. We also need to make sure to use player money for civilian fleets -->
					<do_if value="(this.ship.commander.hasownaccount) and (this.ship.commander.defaultorder == null or this.ship.commander.defaultorder.id != 'TaterTrade') and (this.ship.commander.money gt 0)">
						<set_value name="$spendablemoney" exact="this.ship.commander.money/100"/>
					</do_if>
				</do_if>
				<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Checking if we can afford this deal! Money: '+$spendablemoney+' TotalCost: '+($itemcostsell*$Gromount)+' PerCost: '+$itemcostsell" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
				<do_if value="$spendablemoney gt ($itemcostsell*$Gromount)">
					<do_if value="$GrofferSell.available and $GrofferBuy.available">
						<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Buying '+$Gromount+' '+$GrofferSell.ware+' for '+$itemcostsell+' at '+$GrofferSell.seller.knownname+' then '+'Selling '+$Gromount+' '+$GrofferBuy.ware+' for '+$itemcostbuy+' at '+$GrofferBuy.buyer.knownname" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
						<do_if value="$GrofitFound">
							<do_if value="($GrofferBuy.buyer.owner == this.ship.owner) or ($GrofferSell.seller.owner == this.ship.owner)">
								<do_if value="($GrofferBuy.buyer.owner == this.ship.owner) and ($GrofferSell.seller.owner != this.ship.owner)">
									<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="-$Gromount*$itemcostsell*100" text="{3282837,202}.[$Gromount,$GrofferSell.ware,$itemcostsell,$GrofferBuy.buyer.knownname]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
								</do_if>
								<do_if value="($GrofferSell.seller.owner == this.ship.owner) and ($GrofferBuy.buyer.owner != this.ship.owner)">
									<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="$Gromount*$itemcostbuy*100" text="{3282837,203}.[$Gromount,$GrofferSell.ware,$GrofferSell.seller.knownname,$itemcostbuy,$Gromount*$itemcostbuy]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
								</do_if>
								<do_if value="($GrofferSell.seller.owner == this.ship.owner) and ($GrofferBuy.buyer.owner == this.ship.owner)">
									<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" text="{3282837,204}.[$Gromount,$GrofferSell.ware,$GrofferSell.seller.knownname,$GrofferBuy.buyer.knownname]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
								</do_if>
							</do_if>
							<do_else>
								<set_value name="$ThisShip" exact="this.assignedcontrolled"/>
								<do_if value="global.$DALifetimeGrofit.{$ThisShip}?">
									<debug_text text="'MOD: TaterTrader -- %1 -- Ship: %2 -- global.$DALifetimeGrofit? %3'.[player.age,this.assignedcontrolled.idcode,global.$DALifetimeGrofit.{$ThisShip}]" context="false" filter="scripts" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
								</do_if>
								<set_value name="$Message" exact="{3282837,205}.[$Gromount,$GrofferSell.ware,$itemcostsell,$itemcostbuy,$Gromount*($itemcostbuy-$itemcostsell)]"/>
								<set_value name="$Message" exact="{3282837,212}.[if global.$DALifetimeGrofit.{$ThisShip} then (global.$DALifetimeGrofit.{$ThisShip}).formatted.{'%.k %Cr'} else {1001,9002}]" operation="add" chance="(global.$DALifetimeGrofit.{$ThisShip}?) * 100"/>
								<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="-$Gromount*$itemcostsell*100" bonus="$Gromount*($itemcostbuy-$itemcostsell)*100" text="$Message" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
								<remove_value name="$Message"/>
								<remove_value name="$ThisShip"/>
							</do_else>
						</do_if>
						<do_if value="$StationTrade">
							<!-- Make seperate log types depending what the trader is doing. -->
							<!-- Selling wares from the station. -->
							<do_if value="$GrofferSell.seller == $home">
								<do_if value="$GrofferSell.seller.owner == this.ship.owner">
									<!-- Are We selling to a player station? -->
									<do_if value="$GrofferBuy.buyer.owner == this.ship.owner">
										<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" text="{3282837,207}.[$Gromount,$GrofferSell.ware,$GrofferSell.seller.knownname,$GrofferBuy.buyer.knownname]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
									</do_if>
									<do_else>
										<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="$Gromount*$itemcostbuy*100" text="{3282837,208}.[$Gromount,$GrofferSell.ware,$itemcostbuy,$Gromount*$itemcostbuy]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
									</do_else>
								</do_if>
								<do_else>
									<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="-$Gromount*$itemcostsell*100" bonus="$Gromount*($itemcostbuy-$itemcostsell)*100" text="{3282837,205}.[$Gromount,$GrofferSell.ware,$itemcostsell,$itemcostbuy,$Gromount*($itemcostbuy-$itemcostsell)]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
								</do_else>
							</do_if>
							<!-- Buying wares for the station. -->
							<do_if value="$GrofferBuy.buyer == $home">
								<do_if value="$GrofferBuy.buyer.owner == this.ship.owner">
									<!-- Are We buying from a player station? -->
									<do_if value="not ($GrofferSell.seller.owner == this.ship.owner)">
										<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="-$Gromount*$itemcostbuy*100" text="{3282837,209}.[$Gromount,$GrofferSell.ware,$GrofferBuy.buyer.knownname,$itemcostbuy,$Gromount*$itemcostbuy]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
									</do_if>
									<do_else>
										<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" text="{3282837,210}.[$Gromount,$GrofferSell.ware,$GrofferBuy.buyer.knownname,$GrofferSell.seller.knownname]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
									</do_else>
								</do_if>
								<do_else>
									<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" money="-$Gromount*$itemcostsell*100" bonus="$Gromount*($itemcostbuy-$itemcostsell)*100" text="{3282837,205}.[$Gromount,$GrofferSell.ware,$itemcostsell,$itemcostbuy,$Gromount*($itemcostbuy-$itemcostsell)]" chance="if @$enablelogbook then ($enablelogbook * 100) else (0)"/>
								</do_else>
							</do_if>
						</do_if>
						<!-- Attempting to access the trade offers after the order is created spits out errors, so lets set up the orders last. -->
						<create_trade_order name="$GrofferSell" object="this.object" tradeoffer="$GrofferSell" amount="$Gromount" immediate="false"/>
						<create_trade_order name="$GrofferBuy" object="this.object" tradeoffer="$GrofferBuy" amount="$Gromount" immediate="false"/>
					</do_if>
					<do_else>
						<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Looks like the trade were looking at is no longer available.'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					</do_else>
				</do_if>
				<do_else>
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'We cant afford this deal anymore'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
				</do_else>
			</do_if>
			<label name="afterdealsetup"/>
			<do_if value="$returnhome">
				<do_if value="$home.isclass.space">
					<do_if value="not this.ship.hascontext.{$home}">
						<!-- FlyBack to home sector -->
						<get_safe_pos object="this.ship" radius="this.ship.size" angle="45deg" result="$safepos" sector="$home"/>
						<create_order object="this.ship" id="'MoveGeneric'" immediate="false">
							<param name="destination" value="$home"/>
							<param name="position" value="$safepos"/>
							<param name="endintargetzone" value="true"/>
						</create_order>
					</do_if>
				</do_if>
				<do_if value="$home.isclass.station">
					<!-- The do_else was causing issues to get through, so lets attempt to filter by class -->
					<do_if value="not this.ship.hascontext.{$home.sector}">
						<!-- FlyBack to home station -->
						<create_order object="this.ship" id="'DockAt'" immediate="false">
							<param name="destination" value="$home"/>
						</create_order>
					</do_if>
				</do_if>
			</do_if>
			<!-- DA added increasing wait when ship fails to find a trade multiple times -->
			<do_if value="not ($GrofitFound or $StationTrade)">
				<do_if value="(not $SearchFailed?) or (@$SearchFailed == 0)">
					<set_value name="$SearchFailed" exact="1"/>
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Order: '+this.ship.order.id+' Failed to find a trade ' + $SearchFailed + ' times. Waiting before checking again.'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<debug_text text="'MOD: TaterTrader -- %1 -- Ship: %2 -- Trades Failed: %3'.[player.age,this.ship.idcode,$SearchFailed]" context="false" filter="scripts" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<set_command command="command.wait"/>
					<set_command_action commandaction="commandaction.standingby"/>
					<wait exact="10s" sinceversion="10"/>
					<resume label="verystart"/>
				</do_if>
				<do_elseif value="(@$SearchFailed le 5) and (@$SearchFailed ge 1)">
					<set_value name="$SearchFailed" exact="$SearchFailed + 1"/>
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Order: '+this.ship.order.id+' Failed to find a trade ' + $SearchFailed + ' times. Waiting before checking again.'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<debug_text text="'MOD: TaterTrader -- %1 -- Ship: %2 -- Trades Failed: %3'.[player.age,this.ship.idcode,$SearchFailed]" context="false" filter="scripts" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<set_command command="command.wait"/>
					<set_command_action commandaction="commandaction.standingby"/>
					<wait exact="10s * $SearchFailed" sinceversion="10"/>
					<resume label="verystart"/>
				</do_elseif>
				<do_elseif value="@$SearchFailed ge 6">
					<set_value name="$SearchFailed" exact="$SearchFailed + 1"/>
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Order: '+this.ship.order.id+' Failed to find a trade ' + $SearchFailed + ' times. Notifying player.'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<debug_text text="'MOD: TaterTrader -- %1 -- Ship: %2 -- Trades Failed: %3'.[player.age,this.ship.idcode,$SearchFailed]" context="false" filter="scripts" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<set_command command="command.wait"/>
					<set_command_action commandaction="commandaction.standingby"/>
					<write_to_logbook category="upkeep" title="'TaterTrader: '+this.ship.knownname+' ( '+this.ship.idcode+' )'" interaction="showonmap" object="this.ship" text="{3282837,211}.[$SearchFailed]" highlighted="true"/>
					<wait exact="20s * $SearchFailed" sinceversion="10"/>
				</do_elseif>
			</do_if>
			<do_elseif value="$GrofitFound or $StationTrade">
				<set_value name="$SearchFailed" exact="0"/>
			</do_elseif>
			<do_else>
				<debug_text text="'MOD: TaterTrader -- %1 -- Ship: %2 -- Trade failure procedures failed: %3'.[player.age,this.ship.idcode,if $SearchFailed? then $SearchFailed else 'Null',if $GrofitFound? then $GrofitFound else 'Null', if $StationTrade then $StationTrade else 'Null']" context="false" filter="scripts" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
			</do_else>
			<label name="orderloop"/>
			<!-- Lets try handling our orders ourselfs -->
			<!-- <debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'OrderLoop Is go'" output="false" append="true" /> -->
			<do_if value="not (this.ship.order == this.ship.defaultorder)">
				<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Order: '+this.ship.order.id+' State: '+this.ship.order.state" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
				<do_if value="this.ship.order.state == orderstate.ready">
					<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Commencing Order: '+this.ship.order.id" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
					<run_order_script order="this.ship.order"/>
					<!--  <resume label="orderloop" /> -->
				</do_if>
				<do_if value="this.ship.order.state == orderstate.started">
					<wait exact="50ms"/>
					<!--   <resume label="orderloop" /> -->
				</do_if>
				<!-- <resume label="orderloop" /> -->
			</do_if>
			<!-- For some reason, we never get to this point. I think when it reachs the docking sequence the game aborts executing this script. -->
			<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Orders Should of finished by now.'" output="false" append="true" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
			<!-- Add a delay after the order "ends" -->
			<!-- Longer wait DA-->
			<wait min="1s" max="5s"/>
			<debug_to_file name="this.ship.idcode" directory="'TaterTrader'" text="'Resetting Log File Version: 10'" output="false" append="false" chance="if @$TaterDebugChance then ($TaterDebugChance * 100) else (0)"/>
			<resume label="start"/>
			<!-- Might need a way to restart the script after a amount of time to prevent the build up of issues. -->
		</actions>
	</attention>
</aiscript>
